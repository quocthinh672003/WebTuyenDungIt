var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.162,1,3.006]],["body/controllers/AppController.html",[0,1.938,1,5.014,2,1.578,3,0.162,4,0.162,5,0.109,6,4.898,7,0.301,8,0.012,9,2.785,10,5.605,11,5.605,12,0.851,13,5.083,14,4.898,15,4.486,16,3.204,17,4.256,18,5.605,19,0.162,20,0.252,21,2.286,22,5.605,23,5.605,24,5.605,25,4.432,26,5.605,27,3.414,28,3.277,29,5.605,30,4.898,31,5.605,32,2.286,33,0.01,34,0.01]],["title/modules/AppModule.html",[35,0.96,36,3.006]],["body/modules/AppModule.html",[1,4.21,2,1.384,3,0.098,4,0.098,5,0.066,7,0.322,8,0.013,12,0.515,13,4.471,14,2.965,15,3.481,16,1.94,19,0.098,20,0.153,33,0.007,34,0.007,35,1.345,36,6.157,37,1.384,38,1.436,39,1.552,40,1.552,41,1.436,42,2.642,43,1.552,44,2.965,45,2.965,46,2.965,47,4.76,48,4.76,49,4.76,50,4.76,51,4.76,52,4.76,53,4.76,54,4.76,55,4.76,56,4.471,57,4.76,58,4.471,59,2.247,60,1.552,61,1.552,62,3.393,63,2.642,64,3.393,65,1.686,66,0.926,67,3.393,68,3.393,69,3.393,70,4.914,71,2.304,72,2.473,73,3.393,74,2.965,75,3.393,76,1.686,77,1.202,78,1.686,79,0.842,80,3.393,81,3.393,82,3.393,83,3.393,84,3.393,85,3.393,86,3.393,87,3.393,88,3.393,89,3.393,90,2.683,91,4.914,92,3.393,93,2.965,94,3.393,95,3.393,96,3.393,97,3.393,98,2.965,99,2.683,100,1.334,101,3.393,102,3.393,103,3.393,104,4.914,105,3.393,106,0.897,107,2.683,108,3.393,109,3.393,110,1.202,111,3.393,112,3.393,113,3.393,114,1.436,115,1.94,116,3.393,117,2.965]],["title/injectables/AppService.html",[13,2.631,118,0.819]],["body/injectables/AppService.html",[3,0.174,4,0.174,5,0.117,7,0.234,8,0.012,12,0.916,13,4.588,19,0.174,20,0.272,33,0.01,34,0.01,106,1.594,118,1.428,119,2.21,120,5.27,121,0.652,122,2.025,123,7.959,124,0.823,125,6.031,126,1.698,127,1.054,128,6.031,129,6.031]],["title/controllers/AuthController.html",[0,1.162,130,3.006]],["body/controllers/AuthController.html",[0,0.954,2,0.954,3,0.098,4,0.098,5,0.066,7,0.287,8,0.013,9,1.683,12,0.514,17,3.299,19,0.098,20,0.153,21,1.381,27,2.158,33,0.007,34,0.007,74,2.96,100,2.27,106,1.775,110,2.044,121,0.366,122,1.382,124,0.917,126,1.892,130,3.577,131,2.96,132,1.614,133,2.96,134,4.909,135,5.772,136,5.772,137,5.772,138,4.909,139,3.388,140,2.559,141,1.564,142,5.772,143,2.336,144,3.388,145,3.388,146,2.084,147,0.917,148,0.851,149,1.953,150,1.614,151,3.388,152,5.233,153,3.388,154,3.388,155,3.388,156,5.871,157,3.388,158,3.388,159,3.388,160,3.388,161,3.388,162,5.104,163,3.388,164,4.289,165,3.388,166,3.388,167,3.388,168,4.004,169,3.388,170,1.573,171,3.388,172,3.388,173,3.388,174,1.843,175,6.329,176,2.679,177,2.468,178,2.679,179,3.444,180,1.614,181,1.614,182,2.161,183,2.301,184,2.041,185,1.434,186,2.671,187,2.679,188,3.388,189,3.388,190,3.388,191,3.388,192,2.96,193,3.388,194,5.772,195,3.388,196,5.772,197,3.388,198,3.388,199,3.388,200,3.388,201,3.388,202,3.388,203,3.388,204,2.96,205,3.388,206,3.388,207,1.474,208,2.679,209,1.489,210,3.388,211,3.388,212,3.388,213,4.206,214,3.388,215,3.577,216,3.388,217,3.388,218,3.388,219,3.388,220,3.388,221,1.242,222,3.388]],["title/modules/AuthModule.html",[35,0.96,47,2.801]],["body/modules/AuthModule.html",[2,1.647,3,0.126,4,0.126,5,0.084,7,0.316,8,0.013,12,0.661,15,4.254,16,2.488,17,4.683,19,0.126,20,0.196,33,0.008,34,0.008,35,1.538,37,1.775,38,1.842,39,1.99,40,1.99,41,1.842,42,3.02,43,3.02,47,5.655,56,4.838,58,4.838,59,2.674,60,1.99,61,1.99,63,3.02,98,5.11,99,3.441,100,1.711,107,3.441,130,4.812,176,3.441,223,3.803,224,4.352,225,3.803,226,3.803,227,5.151,228,5.151,229,4.352,230,4.352,231,5.847,232,2.776,233,4.352,234,4.352,235,3.441,236,4.352,237,4.624,238,4.352,239,4.352,240,4.352,241,3.803,242,4.352,243,4.352,244,3.803,245,4.352,246,3.803]],["title/injectables/AuthService.html",[17,2.358,118,0.819]],["body/injectables/AuthService.html",[3,0.073,4,0.073,5,0.049,7,0.27,8,0.013,12,0.383,15,3.94,16,1.44,17,2.245,19,0.073,20,0.113,21,1.602,27,2.397,33,0.006,34,0.006,100,2.847,106,1.728,110,1.71,118,0.78,119,0.923,121,0.273,122,1.106,124,0.892,126,1.359,127,1.061,140,2.093,143,2.167,146,1.691,147,1.003,148,0.69,149,1.585,150,2.597,152,4.617,164,4.218,168,3.116,170,1.259,182,1.607,183,1.711,184,1.518,185,1.066,186,3.558,187,1.992,192,5.165,207,2.264,208,3.106,209,2.974,213,4.562,215,1.836,235,1.992,237,3.106,241,3.432,244,2.201,246,2.201,247,2.201,248,1.006,249,4.827,250,4.827,251,4.827,252,3.432,253,3.928,254,2.519,255,3.407,256,6.539,257,2.519,258,3.928,259,2.519,260,3.432,261,2.519,262,3.928,263,4.764,264,2.519,265,1.992,266,2.862,267,3.079,268,2.908,269,2.519,270,2.519,271,2.519,272,1.711,273,1.992,274,2.519,275,2.299,276,1.836,277,2.519,278,1.371,279,1.607,280,2.201,281,1.836,282,2.201,283,2.519,284,1.836,285,2.519,286,3.928,287,2.519,288,2.519,289,3.106,290,3.928,291,1.878,292,3.432,293,3.928,294,2.519,295,2.832,296,3.432,297,2.201,298,1.708,299,2.482,300,4.218,301,3.928,302,3.928,303,3.928,304,6.764,305,3.928,306,1.602,307,3.928,308,3.928,309,3.928,310,3.928,311,3.928,312,3.928,313,4.827,314,3.928,315,4.827,316,1.992,317,2.519,318,2.201,319,1.108,320,2.201,321,3.928,322,2.201,323,2.519,324,2.519,325,2.519,326,1.992,327,2.519,328,3.928,329,2.04,330,3.928,331,1.544,332,3.106,333,3.432,334,3.432,335,2.201,336,1.992,337,2.519,338,1.371,339,2.519]],["title/controllers/CompaniesController.html",[0,1.162,340,3.006]],["body/controllers/CompaniesController.html",[0,1.045,2,1.045,3,0.107,4,0.107,5,0.072,7,0.28,8,0.012,9,3.018,12,0.564,19,0.107,20,0.167,28,1.767,33,0.008,34,0.008,77,1.314,106,1.908,114,2.57,121,0.401,122,1.475,124,0.949,126,1.959,127,1.212,132,1.767,140,2.767,141,1.62,143,2.354,146,2.158,147,0.949,148,0.881,149,2.023,174,2.85,179,3.304,180,1.767,185,1.57,306,2.136,340,3.817,341,3.242,342,3.242,343,1.475,344,2.57,345,2.217,346,2.217,347,3.242,348,4.606,349,3.711,350,3.242,351,2.901,352,3.711,353,5.239,354,1.855,355,3.342,356,3.711,357,4.578,358,1.697,359,3.711,360,3.711,361,2.392,362,1.57,363,3.156,364,3.711,365,2.367,366,5.041,367,3.558,368,3.711,369,2.019,370,2.121,371,2.217,372,3.873,373,3.242,374,1.513,375,4.142,376,1.513,377,2.934,378,3.711,379,1.631,380,2.52,381,3.711,382,2.367,383,2.704,384,2.704,385,3.711,386,2.236,387,2.367,388,3.711,389,3.242,390,3.711,391,3.711,392,2.367,393,3.711]],["title/modules/CompaniesModule.html",[35,0.96,48,2.801]],["body/modules/CompaniesModule.html",[2,1.893,3,0.156,4,0.156,5,0.105,7,0.306,8,0.012,12,0.82,19,0.156,20,0.243,33,0.01,34,0.01,35,1.705,37,2.202,38,2.285,39,2.469,40,2.469,41,2.285,42,3.349,43,2.469,48,5.458,59,3.075,60,2.469,61,2.469,63,2.469,65,2.683,66,1.473,147,0.737,340,5.335,354,1.912,372,5.127,373,4.719,394,4.719,395,4.719,396,5.4,397,5.4,398,4.899,399,4.719,400,3.086,401,4.719,402,2.202]],["title/injectables/CompaniesService.html",[118,0.819,372,2.631]],["body/injectables/CompaniesService.html",[3,0.072,4,0.072,5,0.049,7,0.275,8,0.012,12,0.38,19,0.072,20,0.113,21,1.592,25,1.978,27,1.1,33,0.006,34,0.006,66,0.682,76,1.243,77,1.702,78,1.243,79,1.192,100,2.887,106,1.832,110,0.886,114,2.76,115,1.429,118,0.775,119,0.917,121,0.271,122,1.1,124,0.852,126,1.758,127,1.017,140,2.456,143,1.962,146,1.936,147,0.852,148,0.791,149,1.815,150,2.587,170,1.251,185,1.058,207,1.874,209,2.59,221,1.431,266,1.822,278,3.858,279,1.595,284,3.501,291,1.435,298,1.311,306,1.592,338,2.125,343,1.1,344,1.653,345,1.653,346,1.653,347,3.413,348,3.982,350,3.413,351,1.717,354,2.211,357,4.199,358,1.786,361,2.234,362,1.653,365,2.491,366,4.582,371,2.033,372,2.491,374,1.02,375,3.088,376,1.02,399,2.185,403,2.185,404,2.501,405,2.955,406,2.501,407,3.905,408,2.501,409,2.653,410,2.501,411,2.501,412,2.501,413,2.501,414,1.822,415,1.361,416,1.595,417,1.978,418,2.185,419,1.507,420,1.429,421,1.429,422,2.501,423,2.501,424,2.501,425,1.058,426,2.895,427,2.501,428,2.501,429,3.413,430,2.746,431,3.905,432,2.501,433,0.949,434,2.501,435,2.501,436,1.507,437,1.595,438,1.507,439,2.353,440,1.507,441,1.507,442,1.507,443,2.353,444,2.185,445,2.185,446,2.895,447,3.549,448,2.353,449,2.232,450,3.799,451,2.028,452,2.185,453,2.185,454,2.232,455,3.549,456,3.549,457,3.549,458,2.185,459,3.799,460,3.413,461,2.895,462,2.185,463,2.388,464,2.185,465,2.353,466,2.501,467,2.353,468,1.507,469,2.353,470,2.501,471,2.353,472,1.978,473,1.978,474,2.185,475,2.746,476,2.185,477,3.464,478,3.065,479,2.353,480,2.185,481,2.185,482,3.413,483,4.199,484,1.507,485,2.353,486,3.413,487,3.413,488,3.088,489,1.978,490,3.088,491,1.978,492,2.185,493,2.185,494,2.185,495,2.185,496,2.185,497,2.185,498,2.185,499,2.353,500,2.185,501,2.185,502,1.978,503,2.185,504,2.185,505,2.353,506,1.822,507,1.822,508,1.507,509,1.361,510,1.507,511,1.507,512,2.353,513,1.507,514,1.507,515,1.507,516,2.185,517,2.501,518,2.501,519,2.501]],["title/classes/Company.html",[20,0.186,354,1.461]],["body/classes/Company.html",[3,0.114,4,0.114,5,0.077,7,0.213,8,0.012,19,0.182,20,0.178,33,0.008,34,0.008,66,1.08,79,1.36,110,1.402,121,0.428,124,1.091,127,1.173,141,1.863,147,0.858,148,1.055,207,1.189,248,1.404,291,1.662,298,1.715,319,2.765,354,1.942,398,2.885,402,2.235,414,2.885,425,2.661,433,2.386,520,0.982,521,2.885,522,3.594,523,3.594,524,2.995,525,3.266,526,3.594,527,4.27,528,2.995,529,5.051,530,3.96,531,3.371,532,3.96,533,3.594,534,3.789,535,2.611,536,3.96,537,3.96,538,3.96,539,3.96,540,2.847,541,3.96,542,3.96,543,3.96,544,3.96,545,3.96,546,2.386,547,3.134,548,2.386,549,2.661,550,3.46]],["title/classes/Company-1.html",[20,0.155,354,1.218,451,1.787]],["body/classes/Company-1.html",[3,0.104,4,0.104,5,0.07,7,0.231,8,0.012,19,0.104,20,0.322,32,1.463,33,0.007,34,0.007,79,1.269,110,1.271,121,0.388,124,0.813,127,1.137,141,1.388,147,0.937,148,0.87,170,1.639,221,2.952,248,1.31,268,3.082,275,3.273,291,1.575,331,3.05,354,2.433,409,2.012,463,3.414,520,0.89,525,2.657,527,4.048,531,2.972,535,1.271,540,2.657,549,2.165,551,5.139,552,2.614,553,3.467,554,3.588,555,3.588,556,3.588,557,5.209,558,1.864,559,3.082,560,3.727,561,5.209,562,3.263,563,3.263,564,4.47,565,2.783,566,2.086,567,1.864,568,2.162,569,3.188,570,3.411,571,3.407,572,3.738,573,3.263,574,4.714,575,3.135,576,2.837,577,3.135,578,3.135,579,2.837,580,3.727,581,4.045,582,4.045,583,4.045,584,4.714,585,4.47,586,4.714,587,3.592]],["title/classes/Company-2.html",[20,0.155,276,2.507,354,1.218]],["body/classes/Company-2.html",[3,0.108,4,0.108,5,0.072,7,0.236,8,0.012,19,0.152,20,0.326,32,1.521,33,0.008,34,0.008,79,1.304,121,0.404,124,0.717,127,1.171,141,1.225,147,1.014,148,0.838,168,2.132,182,3.885,221,2.97,248,1.346,275,1.777,291,1.609,298,1.973,299,2.311,331,3.206,354,2.469,361,1.235,409,2.068,463,3.026,520,0.925,522,3.78,535,1.321,549,2.577,553,3.5,558,1.938,562,3.354,563,3.354,565,2.861,566,1.521,567,1.938,569,3.223,570,3.539,572,3.314,588,2.533,589,3.26,590,3.731,591,3.481,592,3.006,593,2.132,594,4.158,595,3.78,596,4.218,597,4.218,598,2.38]],["title/classes/CreateCompanyDto.html",[20,0.186,348,2.631]],["body/classes/CreateCompanyDto.html",[3,0.147,4,0.147,5,0.099,7,0.198,8,0.012,19,0.147,20,0.292,32,2.077,33,0.009,34,0.009,121,0.551,124,1.024,127,1.194,141,1.747,147,1.057,148,0.95,248,1.659,348,4.134,520,1.263,522,4.428,525,4.024,527,5.261,535,1.804,553,2.155,566,2.077,567,2.645,591,2.911,599,6.77,600,4.027,601,4.048,602,8.145,603,5.093,604,5.093,605,5.093,606,5.093,607,4.027]],["title/classes/CreateFileDto.html",[20,0.186,608,2.631]],["body/classes/CreateFileDto.html",[3,0.188,4,0.188,5,0.126,8,0.011,19,0.188,20,0.292,33,0.011,34,0.011,520,1.609,608,4.788,609,5.668,610,5.129]],["title/classes/CreateJobDto.html",[20,0.186,568,2.485]],["body/classes/CreateJobDto.html",[3,0.08,4,0.08,5,0.054,7,0.198,8,0.012,19,0.08,20,0.292,32,1.125,33,0.006,34,0.006,79,1.045,110,1.492,121,0.298,124,1.01,127,1.127,141,1.725,147,0.886,148,0.963,170,1.35,221,3.024,248,1.078,268,2.538,275,3.469,291,0.729,331,3.151,354,2.393,409,2.249,463,3.619,520,0.684,525,3.2,527,1.873,531,3.186,535,0.977,540,2.971,549,1.167,551,5.94,552,2.01,553,3.252,557,4.465,558,1.433,559,2.538,560,3.069,561,4.465,562,2.687,563,2.687,564,3.681,565,2.292,566,1.718,567,1.433,568,2.538,569,3.074,570,3.437,571,3.862,572,3.963,573,2.687,574,4.041,575,2.41,576,2.181,577,2.41,578,2.41,579,3.331,580,4.489,581,4.871,582,4.871,583,4.871,584,5.342,585,3.681,586,5.342,587,4.07,601,3.619,611,2.41,612,2.758,613,2.758,614,4.212,615,4.212,616,2.758,617,2.41,618,2.758,619,2.758,620,2.758,621,2.758,622,2.758,623,2.758,624,2.181,625,2.758,626,2.758,627,2.758]],["title/classes/CreatePermissionDto.html",[20,0.186,628,2.631]],["body/classes/CreatePermissionDto.html",[3,0.133,4,0.133,5,0.089,7,0.263,8,0.012,19,0.133,20,0.305,32,1.869,33,0.009,34,0.009,35,1.745,79,1.502,121,0.496,124,0.983,127,1.168,141,1.678,147,1.022,148,0.949,221,2.92,248,1.55,331,3.133,520,1.137,535,1.623,553,3.172,558,2.381,562,2.924,563,2.924,565,2.494,566,1.869,567,2.381,569,2.834,570,3.503,591,2.62,592,2.62,601,3.582,607,3.625,628,3.861,629,6.549,630,3.625,631,4.78,632,5.089,633,4.584,634,4.584,635,4.584,636,4.584]],["title/classes/CreateResumeDto.html",[20,0.186,637,2.485]],["body/classes/CreateResumeDto.html",[3,0.11,4,0.11,5,0.074,7,0.207,8,0.012,19,0.154,20,0.3,32,1.549,33,0.008,34,0.008,79,1.321,121,0.411,124,0.993,127,1.096,141,1.694,148,0.922,221,2.996,248,1.364,298,1.915,331,3.215,361,1.764,520,0.942,535,1.346,549,3.227,553,3.323,566,1.549,567,1.973,569,3.121,570,3.594,592,3.516,598,3.398,601,3.616,637,3.209,638,5.909,639,2.423,640,5.557,641,5.557,642,3.82,643,5.445,644,5.115,645,3.799,646,3.799,647,3.799,648,3.799,649,3.799,650,3.32,651,2.423]],["title/classes/CreateRoleDto.html",[20,0.186,652,2.631]],["body/classes/CreateRoleDto.html",[3,0.123,4,0.123,5,0.083,7,0.223,8,0.012,19,0.123,20,0.259,33,0.008,34,0.008,79,1.428,110,2.039,121,0.46,124,0.954,127,1.025,141,1.629,147,0.997,148,0.886,221,2.992,248,1.474,275,3.332,295,4.001,331,3.081,361,1.409,450,4.553,463,2.861,520,1.055,525,3.796,535,2.039,540,3.633,549,2.437,553,3.093,559,3.469,560,4.195,566,1.734,569,3.081,570,3.312,572,3.133,573,3.672,574,5.161,587,4.641,592,3.291,598,3.672,601,3.476,617,3.717,652,3.672,653,6.386,654,3.363,655,4.253,656,5.031,657,4.253,658,4.253,659,4.253,660,2.531,661,4.253,662,4.253]],["title/classes/CreateSubscriberDto.html",[20,0.186,663,2.631]],["body/classes/CreateSubscriberDto.html",[3,0.141,4,0.141,5,0.094,7,0.244,8,0.012,19,0.141,20,0.283,33,0.009,34,0.009,79,1.561,121,0.526,124,0.952,127,1.147,141,1.624,147,1.042,148,0.883,221,2.957,248,1.611,298,2.084,331,3.173,520,1.207,553,3.121,559,3.792,560,3.545,566,1.984,569,2.9,570,3.501,571,3.987,579,5.832,592,2.781,601,3.466,624,3.847,663,4.014,664,6.445,665,3.847,666,4.865,667,4.865,668,4.865]],["title/classes/CreateUserCvDto.html",[20,0.186,651,2.631]],["body/classes/CreateUserCvDto.html",[3,0.119,4,0.119,5,0.08,7,0.218,8,0.012,19,0.163,20,0.311,32,1.679,33,0.008,34,0.008,79,1.397,121,0.445,124,0.876,127,1.059,141,1.495,148,0.813,221,2.976,248,1.442,298,1.536,331,3.193,361,2.285,520,1.021,535,1.458,549,3.233,553,3.377,566,1.679,567,2.139,569,3.168,570,3.508,592,3.669,598,4.402,601,3.19,637,2.481,638,5.457,639,2.626,640,5.748,641,5.748,642,3.064,643,5.566,644,4.104,651,3.592,669,4.921,670,4.118,671,4.118,672,4.118]],["title/classes/CreateUserDto.html",[20,0.186,593,2.358]],["body/classes/CreateUserDto.html",[3,0.089,4,0.089,5,0.06,7,0.212,8,0.012,19,0.133,20,0.305,32,1.261,33,0.007,34,0.007,79,1.139,121,0.335,124,0.984,127,1.169,141,1.68,147,0.984,148,0.95,168,1.768,182,4.7,221,3.008,248,1.176,275,2.187,291,0.817,298,2.045,299,2.665,331,3.238,354,2.487,361,1.521,409,2.153,463,3.217,520,0.767,522,4.014,535,1.095,549,2.318,553,3.373,558,1.607,562,2.929,563,2.929,565,2.498,566,1.261,567,1.607,569,3.154,570,3.564,572,3.297,588,2.101,591,3.464,592,2.625,593,2.625,594,4.33,595,4.014,596,4.479,597,4.479,598,2.929,601,3.37,611,2.703,669,2.703,673,3.093,674,3.093,675,3.093,676,2.703,677,3.093,678,3.093,679,3.093,680,3.093,681,3.093]],["title/controllers/DatabasesController.html",[0,1.162,682,3.006]],["body/controllers/DatabasesController.html",[0,1.729,2,1.729,3,0.177,4,0.177,5,0.119,7,0.282,8,0.012,12,0.932,19,0.177,20,0.276,28,2.924,33,0.01,34,0.01,132,2.924,379,2.699,682,5.296,683,5.364,684,6.139,685,4.939,686,5.364,687,6.139]],["title/modules/DatabasesModule.html",[35,0.96,49,2.801]],["body/modules/DatabasesModule.html",[2,1.783,3,0.142,4,0.142,5,0.095,7,0.314,8,0.012,12,0.746,19,0.142,20,0.221,33,0.009,34,0.009,35,1.632,37,2.003,38,2.079,39,2.246,40,2.246,41,2.079,42,3.205,43,2.246,49,5.491,59,2.896,60,2.246,61,2.246,63,2.246,65,2.441,66,1.34,143,1.428,147,0.956,255,4.268,273,3.884,299,1.864,400,2.807,402,2.857,417,3.884,660,2.159,682,5.106,685,5.003,686,4.292,688,4.292,689,4.292,690,4.911,691,4.911,692,4.3,693,4.3,694,3.579,695,4.039,696,3.335,697,3.884,698,3.884,699,3.579]],["title/injectables/DatabasesService.html",[118,0.819,685,2.631]],["body/injectables/DatabasesService.html",[3,0.098,4,0.098,5,0.066,7,0.292,8,0.013,12,0.514,15,4.351,16,1.933,19,0.098,20,0.152,21,1.999,27,3.252,28,2.747,32,1.379,33,0.007,34,0.007,66,0.923,76,1.681,77,1.198,78,1.681,79,0.839,100,2.268,110,1.736,118,0.973,119,1.24,121,0.366,122,1.381,124,0.787,126,0.952,143,0.983,146,1.049,147,0.787,148,0.428,149,0.983,170,1.571,207,2.168,209,3.479,248,1.255,255,3.441,267,2.157,268,2.038,273,2.674,278,1.84,279,2.157,295,2.546,299,1.284,405,4.166,415,1.84,416,2.157,417,2.674,507,2.464,522,3.296,525,2.546,587,2.954,595,3.296,596,3.678,597,3.678,660,1.487,685,3.127,694,2.464,696,2.297,700,2.955,701,6.324,702,7.001,703,2.955,704,5.039,705,4.56,706,5.767,707,4.903,708,4.284,709,3.382,710,4.903,711,2.297,712,2.157,713,2.674,714,4.202,715,4.202,716,4.903,717,2.464,718,3.382,719,2.955,720,2.674,721,3.382,722,3.382,723,3.382,724,3.382,725,3.382,726,4.903,727,3.382,728,4.903,729,3.382,730,4.903,731,5.102,732,3.382,733,3.382,734,4.903,735,3.382,736,3.382,737,2.674,738,3.382,739,3.382,740,3.382,741,3.382,742,3.382,743,2.955,744,2.955,745,3.382,746,3.382,747,4.903,748,3.382,749,3.382,750,3.382,751,3.382,752,5.767,753,5.767,754,5.767,755,3.382,756,4.903,757,3.382,758,3.382,759,4.903,760,3.382,761,3.382,762,3.382,763,3.382,764,2.464,765,3.382]],["title/classes/File.html",[5,0.08,20,0.186]],["body/classes/File.html",[3,0.188,4,0.188,5,0.154,8,0.011,19,0.188,20,0.293,33,0.011,34,0.011,520,1.614,766,5.685]],["title/controllers/FilesController.html",[0,1.162,767,3.006]],["body/controllers/FilesController.html",[0,1.351,2,1.351,3,0.139,4,0.139,5,0.142,7,0.302,8,0.012,9,2.384,12,0.729,19,0.139,20,0.216,28,2.285,33,0.009,34,0.009,77,1.699,106,1.268,121,0.519,122,1.756,124,0.654,126,1.351,132,2.285,141,1.117,146,1.488,147,0.654,148,0.608,149,1.395,170,1.537,174,2.61,180,2.285,181,2.285,184,2.89,369,2.61,370,2.742,374,1.956,376,1.956,379,2.109,451,2.492,608,3.06,767,4.544,768,4.192,769,3.793,770,6.929,771,4.797,772,6.929,773,4.797,774,5.449,775,4.797,776,4.797,777,5.449,778,4.797,779,6.236,780,6.236,781,4.797,782,4.419,783,4.192,784,4.931,785,3.258,786,4.797,787,3.496,788,4.797,789,4.797,790,4.797,791,4.797,792,4.797,793,4.797,794,4.797,795,4.797,796,4.797,797,6.236,798,4.797,799,4.797,800,4.797,801,4.797,802,4.797]],["title/modules/FilesModule.html",[35,0.96,50,2.801]],["body/modules/FilesModule.html",[2,1.9,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,12,0.824,19,0.157,20,0.244,33,0.01,34,0.01,35,1.709,37,2.213,38,2.297,39,2.482,40,2.482,41,2.297,42,3.356,43,2.482,50,5.465,59,3.085,60,2.482,61,2.482,63,2.482,117,4.743,184,3.27,767,5.348,782,5.133,783,4.743,787,3.955,803,4.743,804,4.743,805,5.428,806,5.428,807,5.428,808,4.915,809,5.428,810,5.428]],["title/injectables/FilesService.html",[118,0.819,782,2.631]],["body/injectables/FilesService.html",[3,0.13,4,0.13,5,0.144,7,0.26,8,0.012,12,0.681,19,0.13,20,0.202,33,0.009,34,0.009,106,1.966,118,1.184,119,1.644,121,0.485,122,1.68,124,1.015,126,2.199,127,1.091,146,2.216,147,0.975,148,0.905,149,2.078,170,1.437,306,2.433,343,1.68,344,3.024,345,2.525,346,2.525,358,2.728,361,2.533,362,2.525,365,3.805,374,1.829,376,1.829,409,3.157,516,6.501,608,4.746,769,3.546,782,3.805,784,4.717,785,5.302,811,3.919,812,5.966,813,4.485,814,4.485,815,4.485,816,4.485,817,4.485,818,4.485,819,4.485,820,4.485]],["title/controllers/HealthController.html",[0,1.162,821,3.006]],["body/controllers/HealthController.html",[0,1.574,2,1.574,3,0.162,4,0.162,5,0.109,7,0.288,8,0.012,12,0.849,19,0.162,20,0.252,21,2.279,27,3.02,33,0.01,34,0.01,106,1.477,121,0.605,122,1.934,124,0.763,126,1.574,132,2.663,141,1.302,179,3.738,181,2.663,821,5.005,822,4.885,823,6.869,824,6.133,825,5.59,826,5.59,827,6.869,828,6.869,829,6.869,830,4.42,831,5.59,832,5.59,833,5.59,834,5.59]],["title/modules/HealthModule.html",[35,0.96,51,2.801]],["body/modules/HealthModule.html",[2,1.991,3,0.169,4,0.169,5,0.114,7,0.306,8,0.012,12,0.89,19,0.169,20,0.264,33,0.01,34,0.01,35,1.646,37,2.389,51,4.801,63,2.68,65,2.912,66,1.598,400,3.349,506,4.27,821,5.532,830,4.633,835,5.86,836,5.86,837,7.069,838,5.12,839,5.86]],["title/classes/History.html",[20,0.186,840,2.485]],["body/classes/History.html",[3,0.136,4,0.136,5,0.091,7,0.293,8,0.012,19,0.136,20,0.34,33,0.009,34,0.009,79,1.163,121,0.507,124,0.935,127,1.005,141,1.596,148,0.981,221,2.252,248,1.573,275,2.233,291,1.239,298,1.279,331,1.844,343,1.32,433,2.995,463,2.33,520,1.163,528,3.264,531,2.809,553,3.427,558,2.435,559,3.701,565,3.728,566,1.912,569,2.416,570,2.061,572,2.551,573,2.99,591,3.511,637,2.825,639,2.99,642,3.728,840,4.755,841,5.298,842,4.688,843,4.688,844,4.688,845,4.688,846,2.435,847,2.33,848,2.926,849,3.184,850,3.707,851,2.825,852,2.061,853,3.707]],["title/interfaces/IUser.html",[140,1.461,854,2.631]],["body/interfaces/IUser.html",[3,0.154,4,0.154,5,0.104,8,0.012,19,0.154,33,0.01,34,0.01,35,1.244,121,0.578,127,1.25,140,2.366,147,1.094,148,1.05,149,1.942,248,1.71,291,2.118,295,3.965,298,2.083,299,2.897,533,4.364,631,3.409,854,3.409,855,4.226,856,4.67]],["title/classes/Job.html",[20,0.186,857,2.05]],["body/classes/Job.html",[3,0.096,4,0.096,5,0.064,7,0.187,8,0.012,19,0.165,20,0.149,33,0.007,34,0.007,66,0.902,79,1.196,110,1.171,121,0.358,124,1.111,127,1.173,141,1.896,147,0.854,148,1.061,207,0.993,248,1.235,291,1.654,298,1.553,319,2.503,354,2.016,402,1.966,409,2.461,425,2.409,433,2.16,520,0.82,523,3.254,524,2.712,525,2.957,526,3.254,527,2.245,528,2.712,529,5.105,531,3.483,533,3.577,534,3.77,535,2.603,540,3.25,546,1.992,547,2.756,548,1.992,549,2.648,571,3.254,580,4.148,581,4.501,582,4.501,583,4.501,584,4.501,586,4.501,587,3.43,857,2.396,858,2.409,859,3.306,860,3.306,861,3.306,862,3.306,863,3.306,864,3.306,865,3.306,866,3.306,867,3.306,868,3.306,869,3.306,870,3.306,871,3.306,872,3.306,873,3.306,874,3.306,875,3.306,876,3.306,877,2.245,878,2.245,879,2.889]],["title/controllers/JobsController.html",[0,1.162,880,3.006]],["body/controllers/JobsController.html",[0,1.01,2,1.01,3,0.104,4,0.104,5,0.07,7,0.277,8,0.012,9,2.542,12,0.545,19,0.104,20,0.162,28,1.709,33,0.007,34,0.007,77,1.271,106,1.816,114,2.75,121,0.388,122,1.44,124,0.937,126,1.935,127,1.207,132,1.709,140,2.747,141,1.6,143,2.357,146,2.131,147,0.937,148,0.87,149,1.998,170,1.639,174,3.244,179,3.244,180,1.709,181,1.709,185,1.518,291,1.717,306,2.431,343,1.679,344,2.523,345,2.523,346,2.165,351,2.857,355,2.289,361,1.974,362,1.518,363,3.082,367,2.437,369,1.952,370,2.051,371,2.165,374,1.463,376,1.463,379,1.578,382,3.263,386,2.162,392,2.289,509,3.244,568,4.303,857,3.653,880,3.727,881,3.135,882,2.837,883,3.135,884,2.837,885,3.588,886,2.837,887,5.115,888,3.588,889,3.588,890,3.135,891,3.135,892,3.588,893,3.588,894,2.614,895,5.103,896,2.837,897,3.588,898,3.588,899,3.802,900,3.135,901,4.045,902,3.588,903,2.437,904,3.588,905,2.837,906,2.837,907,3.588,908,4.47,909,3.588,910,2.289,911,3.588,912,3.588]],["title/modules/JobsModule.html",[35,0.96,52,2.801]],["body/modules/JobsModule.html",[2,1.896,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,12,0.822,19,0.157,20,0.244,33,0.01,34,0.01,35,1.707,37,2.208,38,2.291,39,2.476,40,2.476,41,2.291,42,3.353,43,2.476,52,5.462,59,3.08,60,2.476,61,2.476,63,2.476,65,2.69,66,1.477,147,0.739,400,3.095,402,2.208,857,2.69,878,4.573,880,5.342,899,5.13,900,4.731,913,4.731,914,4.731,915,5.414,916,5.414,917,4.731,918,4.281]],["title/injectables/JobsService.html",[118,0.819,899,2.631]],["body/injectables/JobsService.html",[3,0.073,4,0.073,5,0.049,7,0.276,8,0.012,12,0.384,19,0.073,20,0.114,21,1.605,25,1.997,27,1.11,33,0.006,34,0.006,66,0.689,76,1.255,77,1.712,78,1.255,79,1.199,100,2.998,106,1.656,114,2.77,115,1.443,118,0.781,119,0.926,121,0.273,122,1.108,124,0.855,126,1.666,127,1.079,140,2.518,143,2.022,146,1.944,147,0.923,148,0.794,149,1.822,150,2.818,185,1.069,207,1.965,209,2.878,221,1.442,266,1.84,278,3.869,279,1.611,284,3.523,291,1.838,298,0.689,306,1.605,319,1.11,338,2.97,343,1.361,344,2.046,345,1.665,346,1.665,351,2.126,361,1.303,362,1.665,371,2.046,374,1.03,376,1.03,405,2.97,409,2.465,415,1.374,419,1.522,420,1.443,421,1.443,425,1.069,426,1.522,430,1.443,433,0.958,436,1.522,437,1.611,438,1.522,439,2.371,440,1.522,441,1.522,442,1.522,443,2.371,444,2.207,445,2.207,446,2.913,447,3.565,448,2.371,449,2.249,450,3.823,451,2.044,452,2.207,453,2.207,454,2.249,455,3.565,456,3.565,457,3.565,458,2.207,459,3.823,460,3.439,461,2.913,462,2.207,463,2.403,464,2.207,465,2.371,467,2.371,468,1.522,469,2.371,471,2.371,472,1.997,473,1.997,474,2.207,475,2.763,476,2.207,477,3.482,478,3.084,479,2.371,480,2.207,481,2.207,482,3.439,483,4.225,484,1.522,485,2.371,486,3.439,487,3.439,488,3.112,489,1.997,490,3.112,491,1.997,492,2.207,493,2.207,494,2.207,495,2.207,496,2.207,497,2.207,498,2.207,499,2.371,500,2.207,501,2.207,502,1.997,503,2.207,504,2.207,505,2.371,506,1.84,507,1.84,508,1.522,509,3.219,510,1.522,511,1.522,512,2.371,513,1.522,514,1.522,515,1.522,524,1.203,568,3.776,697,3.112,848,1.203,857,1.955,877,1.715,883,3.439,886,1.997,890,3.439,894,2.867,895,4.597,899,2.51,901,3.112,917,2.207,919,2.207,920,2.525,921,2.525,922,3.439,923,2.525,924,2.525,925,2.525,926,2.525,927,2.525,928,2.525,929,2.207,930,2.525,931,2.525,932,2.525,933,2.525,934,2.525,935,1.997,936,2.525,937,4.835,938,3.935,939,2.525]],["title/injectables/JwtAuthGuard.html",[72,3.006,118,0.819]],["body/injectables/JwtAuthGuard.html",[3,0.204,4,0.111,5,0.075,7,0.274,8,0.013,12,0.585,19,0.111,20,0.173,21,1.569,33,0.008,34,0.008,71,2.614,72,3.917,106,1.637,110,1.904,118,1.067,119,1.411,121,0.416,122,1.514,124,0.845,126,1.514,127,0.564,143,2.124,146,1.921,147,0.845,148,0.784,149,1.801,162,4.885,170,1.722,181,1.833,184,2.319,207,2.194,213,3.917,221,1.97,232,2.455,275,1.833,295,2.792,329,3.217,331,2.436,332,3.043,379,1.692,502,3.043,506,2.805,824,3.043,852,2.363,940,5.859,941,3.043,942,5.375,943,5.375,944,6.194,945,3.363,946,5.778,947,3.849,948,5.375,949,5.465,950,3.849,951,4.885,952,5.375,953,3.849,954,6.705,955,3.849,956,3.043,957,3.363,958,3.043,959,3.043,960,3.043,961,4.697,962,3.849,963,4.25,964,5.375,965,3.849,966,3.849,967,4.697,968,3.849,969,3.043,970,3.849,971,3.849,972,3.849,973,3.849,974,3.849,975,3.849,976,5.375,977,3.849,978,5.375,979,3.849,980,3.849,981,4.898,982,3.849,983,3.849,984,3.849,985,3.849,986,3.849,987,3.849,988,3.849,989,3.849]],["title/injectables/JwtStrategy.html",[118,0.819,227,2.801]],["body/injectables/JwtStrategy.html",[3,0.121,4,0.121,5,0.081,7,0.291,8,0.013,12,0.634,15,4.514,16,2.387,19,0.121,20,0.188,21,2.319,27,2.5,33,0.008,34,0.008,100,2.542,106,1.104,118,1.129,119,1.531,121,0.452,122,1.601,124,0.776,126,1.176,127,0.834,140,2.458,146,1.763,147,0.991,148,0.72,149,1.653,150,2.709,170,2.072,185,1.767,186,4.172,187,3.302,204,3.649,207,2.084,208,3.302,209,1.836,213,3.043,227,3.862,232,2.664,281,3.043,289,3.302,291,1.709,292,3.649,295,2.953,296,3.649,298,1.551,299,2.634,300,6.346,329,3.358,430,2.387,838,3.649,852,2.5,956,3.302,960,3.302,990,3.649,991,4.969,992,4.969,993,4.176,994,4.176,995,5.686,996,4.176,997,4.176,998,3.649,999,3.649,1000,3.649,1001,4.176,1002,4.176,1003,4.176,1004,3.302,1005,4.176,1006,4.176,1007,4.176,1008,4.176,1009,4.176,1010,3.649,1011,4.176,1012,4.176,1013,4.969,1014,4.176,1015,5.686,1016,3.649,1017,5.686,1018,4.176]],["title/injectables/LocalAuthGuard.html",[118,0.819,177,3.006]],["body/injectables/LocalAuthGuard.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,12,0.941,19,0.179,20,0.279,33,0.011,34,0.011,118,1.45,119,2.27,177,5.324,232,3.951,852,3.213,941,4.898,957,5.412,1019,5.412,1020,7.307]],["title/injectables/LocalStrategy.html",[118,0.819,228,2.801]],["body/injectables/LocalStrategy.html",[3,0.144,4,0.144,5,0.097,7,0.289,8,0.012,12,0.757,17,4.501,19,0.144,20,0.224,21,2.032,33,0.009,34,0.009,100,2.774,106,1.317,118,1.268,119,1.826,121,0.539,122,1.8,124,0.872,126,1.403,127,1.154,143,2.051,146,1.982,147,0.872,148,0.809,149,1.858,170,1.597,176,3.94,178,3.94,207,1.496,209,2.191,228,4.34,232,3.178,265,3.94,266,4.657,275,2.373,281,3.631,329,2.588,331,1.959,332,3.94,379,2.191,595,4.254,852,2.81,956,3.94,960,3.94,991,5.584,992,5.584,998,4.354,1000,4.354,1013,4.354,1021,4.354,1022,4.983,1023,4.983,1024,6.391,1025,4.983,1026,4.983,1027,4.983]],["title/controllers/MailController.html",[0,1.162,1028,3.006]],["body/controllers/MailController.html",[0,1.155,2,1.155,3,0.119,4,0.119,5,0.08,7,0.309,8,0.013,12,0.623,19,0.119,20,0.185,27,2.816,28,1.954,33,0.008,34,0.008,66,1.119,76,2.038,77,1.452,78,2.038,79,1.017,90,3.243,100,2.519,106,1.084,121,0.444,122,1.582,124,0.56,126,1.155,132,1.954,141,0.955,147,0.56,179,3.056,180,1.954,181,1.954,207,2.167,209,2.816,267,2.616,298,1.532,354,1.452,379,1.803,405,3.485,415,2.232,571,3.21,731,2.988,857,2.791,877,2.785,882,5.065,922,3.584,929,3.584,951,2.988,1028,4.093,1029,3.584,1030,4.101,1031,6.889,1032,4.101,1033,4.101,1034,5.617,1035,5.617,1036,4.101,1037,4.086,1038,3.584,1039,6.405,1040,3.243,1041,3.584,1042,2.988,1043,3.384,1044,2.785,1045,3.584,1046,4.101,1047,3.243,1048,4.908,1049,4.101,1050,4.101,1051,3.584,1052,3.584,1053,4.101,1054,4.441,1055,4.101,1056,5.617,1057,4.101,1058,4.101,1059,4.101,1060,4.101,1061,4.101,1062,4.101,1063,4.101,1064,4.101,1065,4.101,1066,4.101,1067,4.101,1068,3.584,1069,4.101,1070,4.101,1071,4.101,1072,4.101,1073,4.101,1074,4.101,1075,4.101,1076,3.584,1077,4.101,1078,3.243]],["title/modules/MailModule.html",[35,0.96,53,2.801]],["body/modules/MailModule.html",[2,1.665,3,0.128,4,0.128,5,0.086,7,0.314,8,0.013,12,0.672,15,4.283,16,2.53,19,0.128,20,0.199,33,0.009,34,0.009,35,1.551,37,1.805,38,1.873,39,2.025,40,2.025,41,1.873,42,3.046,43,2.025,53,5.176,59,2.705,60,2.025,61,2.025,63,2.025,65,2.2,66,1.208,99,3.5,100,1.741,107,3.5,110,2.359,133,3.868,143,1.287,147,0.807,170,1.418,263,3.868,400,2.53,402,2.412,857,2.2,878,4.016,918,3.5,1004,4.677,1028,4.853,1037,4.861,1038,3.868,1040,4.677,1041,3.868,1042,3.226,1043,2.667,1045,3.868,1076,3.868,1078,3.5,1079,3.868,1080,3.868,1081,4.427,1082,4.427,1083,4.427,1084,3.868,1085,3.006,1086,5.914,1087,4.427,1088,4.016,1089,4.427,1090,4.427,1091,4.427,1092,4.427,1093,4.427,1094,4.427,1095,4.427,1096,3.868,1097,4.427,1098,4.427,1099,4.427,1100,4.427,1101,4.427,1102,4.427,1103,4.427]],["title/injectables/MailService.html",[118,0.819,1037,2.631]],["body/injectables/MailService.html",[3,0.185,4,0.185,5,0.124,7,0.248,8,0.012,12,0.97,19,0.185,20,0.288,33,0.011,34,0.011,118,1.477,119,2.34,1037,4.745,1104,5.58]],["title/injectables/MulterConfigService.html",[118,0.819,808,3.006]],["body/injectables/MulterConfigService.html",[3,0.117,4,0.117,5,0.133,7,0.279,8,0.013,12,0.616,19,0.117,20,0.183,33,0.008,34,0.008,106,1.682,110,1.435,118,1.106,119,1.485,121,0.438,122,1.569,124,0.868,126,1.569,127,0.933,146,1.257,147,0.868,148,0.513,149,1.178,156,4.868,184,2.442,207,1.217,248,1.426,267,4.06,268,2.442,336,5.682,343,1.141,580,2.953,660,1.782,717,2.953,764,4.059,777,3.542,787,2.953,808,4.059,1084,3.542,1085,3.783,1096,3.542,1105,3.542,1106,6.366,1107,6.855,1108,5.571,1109,4.053,1110,6.366,1111,5.571,1112,4.053,1113,4.053,1114,4.053,1115,4.053,1116,5.571,1117,5.571,1118,5.571,1119,4.053,1120,4.053,1121,4.053,1122,4.053,1123,4.053,1124,4.053,1125,4.053,1126,4.405,1127,4.053,1128,4.053,1129,5.571,1130,4.053,1131,4.053,1132,4.053,1133,4.053,1134,6.366,1135,4.053,1136,4.053,1137,4.053,1138,4.053,1139,4.053,1140,4.053,1141,4.053,1142,4.053,1143,4.053,1144,4.053,1145,4.053,1146,5.571,1147,4.053,1148,4.053,1149,4.053,1150,5.571,1151,4.053,1152,4.053,1153,4.053,1154,5.571,1155,5.571,1156,4.053,1157,4.053,1158,4.053,1159,5.571,1160,4.053,1161,5.571,1162,4.053]],["title/classes/Permission.html",[20,0.186,660,1.814]],["body/classes/Permission.html",[3,0.108,4,0.108,5,0.073,7,0.271,8,0.012,19,0.176,20,0.168,33,0.008,34,0.008,35,1.42,66,1.019,79,1.306,110,1.324,121,0.404,124,1.079,127,1.16,141,1.842,147,0.832,148,1.058,162,2.723,207,1.122,248,1.348,291,1.611,298,1.663,319,2.68,354,1.324,402,2.147,425,2.58,433,2.314,520,0.927,523,3.485,524,2.904,526,3.485,528,2.904,529,4.963,531,3.682,533,3.485,534,4.361,535,2.564,540,2.735,546,2.252,547,3.01,548,2.252,549,2.58,631,3.889,632,4.14,660,2.315,693,2.538,711,2.538,857,1.857,1042,2.723,1163,2.723,1164,3.737,1165,3.737,1166,3.737,1167,3.737,1168,3.737,1169,3.737,1170,3.737,1171,3.737,1172,3.737,1173,3.737,1174,3.737,1175,3.737,1176,3.266,1177,3.737,1178,3.266,1179,3.737,1180,3.266]],["title/controllers/PermissionsController.html",[0,1.162,1181,3.006]],["body/controllers/PermissionsController.html",[0,1.021,2,1.021,3,0.105,4,0.105,5,0.07,7,0.278,8,0.012,9,2.561,12,0.551,19,0.105,20,0.163,28,1.727,33,0.007,34,0.007,77,1.284,106,1.823,114,2.763,121,0.392,122,1.451,124,0.941,126,1.942,127,1.208,132,1.727,140,2.754,141,1.606,143,2.374,146,2.139,147,0.941,148,0.874,149,2.006,170,1.651,174,2.804,180,1.727,181,1.727,185,1.534,295,3.114,306,2.102,343,1.451,344,2.538,345,2.181,346,2.181,351,2.871,355,3.287,358,1.658,361,2.495,362,1.534,363,2.185,365,2.313,367,2.462,369,1.973,370,2.072,371,2.181,374,1.478,376,1.478,379,1.594,380,2.462,382,3.287,383,2.642,384,2.642,386,2.185,387,2.313,389,3.168,392,2.313,628,4.572,660,3.313,884,2.867,903,2.462,910,2.313,1181,3.755,1182,3.168,1183,3.168,1184,3.626,1185,1.973,1186,2.867,1187,3.626,1188,2.804,1189,3.168,1190,3.626,1191,2.867,1192,3.626,1193,5.117,1194,3.168,1195,3.626,1196,3.825,1197,3.168,1198,4.075,1199,3.626,1200,3.626,1201,3.626,1202,3.626,1203,3.626,1204,2.642,1205,3.626]],["title/modules/PermissionsModule.html",[35,0.96,54,2.801]],["body/modules/PermissionsModule.html",[2,1.9,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,12,0.824,19,0.157,20,0.244,33,0.01,34,0.01,35,1.709,37,2.213,38,2.297,39,2.482,40,2.482,41,2.297,42,3.356,43,2.482,54,5.465,59,3.085,60,2.482,61,2.482,63,2.482,65,2.697,66,1.481,402,2.213,660,2.387,693,4.581,698,4.292,1181,5.348,1196,5.133,1197,4.743,1206,4.743,1207,4.743,1208,5.428,1209,5.428,1210,4.743,1211,4.743]],["title/injectables/PermissionsService.html",[118,0.819,1196,2.631]],["body/injectables/PermissionsService.html",[3,0.082,4,0.082,5,0.055,7,0.279,8,0.013,12,0.432,19,0.082,20,0.128,21,1.757,27,1.25,33,0.006,34,0.006,35,1.352,66,0.775,76,1.412,77,1.843,78,1.412,79,1.291,100,2.974,106,1.65,114,2.889,115,1.624,118,0.855,119,1.042,121,0.307,122,1.213,124,0.896,126,1.758,127,1.109,140,2.6,143,2.134,146,2.038,147,1.001,148,0.832,149,1.91,150,2.767,170,0.911,185,1.203,207,2.162,209,3.001,278,3.16,291,1.65,298,1.584,306,1.757,319,1.25,329,1.476,338,2.345,343,1.213,344,1.824,345,1.824,346,1.824,351,2.288,358,1.971,361,1.724,362,1.824,365,2.748,371,2.203,374,1.159,376,1.159,405,3.16,409,2.584,415,1.546,419,1.712,420,1.624,421,1.624,425,1.203,426,2.596,430,1.624,436,1.712,437,1.813,438,1.712,439,1.712,440,1.712,441,1.712,442,1.712,443,1.712,446,1.712,447,2.596,448,1.712,449,1.624,451,1.476,454,1.624,455,1.712,456,2.596,457,2.596,461,2.596,465,2.596,467,2.596,468,1.712,469,2.596,471,1.712,475,1.624,477,1.813,478,1.813,479,1.712,484,1.712,485,1.712,499,1.712,505,1.712,508,1.712,509,1.546,510,1.712,511,1.712,512,2.596,513,1.712,514,1.712,515,1.712,524,1.354,628,4.191,631,3.982,632,3.944,660,1.895,704,3.765,711,1.93,719,2.483,764,2.071,1126,2.247,1183,3.765,1185,2.345,1188,2.832,1193,4.775,1196,2.748,1198,3.407,1210,2.483,1212,2.483,1213,2.842,1214,2.842,1215,2.842,1216,2.842,1217,2.842,1218,2.842,1219,2.842,1220,2.842,1221,2.842,1222,2.842,1223,2.842,1224,2.842,1225,2.842,1226,2.842,1227,2.842,1228,2.842,1229,2.842,1230,2.842,1231,2.842,1232,2.071,1233,2.842,1234,2.842,1235,2.842,1236,2.071,1237,2.842,1238,2.842,1239,2.842]],["title/classes/RegisterUserDto.html",[20,0.186,168,2.358]],["body/classes/RegisterUserDto.html",[3,0.094,4,0.094,5,0.063,7,0.219,8,0.012,19,0.138,20,0.311,32,1.329,33,0.007,34,0.007,79,1.184,121,0.353,124,0.943,127,1.178,141,1.609,147,0.999,148,0.927,168,2.728,182,4.554,221,3.004,248,1.222,275,1.553,291,0.861,298,2.071,299,2.143,331,3.247,354,2.201,361,1.079,409,2.22,463,3.088,520,0.808,522,4.081,535,1.154,549,2.02,553,3.401,558,1.693,562,3.044,563,3.044,565,2.597,566,1.329,567,1.693,569,3.179,570,3.589,572,3.072,588,2.213,591,3.552,592,2.728,593,1.863,594,4.465,595,4.081,596,4.554,597,4.554,598,2.079,601,3.287,676,2.848,1240,3.259,1241,3.259,1242,3.259,1243,3.259,1244,3.259,1245,3.259]],["title/interfaces/Response.html",[152,2.631,854,2.631]],["body/interfaces/Response.html",[3,0.144,4,0.144,5,0.096,7,0.298,8,0.012,12,0.755,19,0.184,20,0.224,32,3.209,33,0.009,34,0.009,71,3.376,106,1.314,118,1.267,121,0.538,127,1.033,148,0.892,149,1.855,152,4.07,248,1.634,377,3.93,379,2.185,409,2.771,569,3.024,717,3.622,854,3.17,855,3.93,946,5.572,949,4.649,951,3.622,963,3.93,1246,3.93,1247,6.719,1248,5.576,1249,5.576,1250,5.576,1251,3.93,1252,4.343,1253,4.343,1254,3.622,1255,3.622,1256,4.343,1257,5.576,1258,4.343,1259,4.343,1260,4.343,1261,4.343,1262,4.343]],["title/classes/Resume.html",[20,0.186,1263,2.485]],["body/classes/Resume.html",[3,0.099,4,0.099,5,0.066,7,0.247,8,0.012,19,0.168,20,0.154,33,0.007,34,0.007,66,0.933,79,1.226,110,1.212,121,0.37,124,1.09,127,1.14,141,1.861,148,1.06,207,1.027,248,1.266,291,1.68,298,1.977,319,2.552,354,1.212,401,2.99,402,2.016,425,2.457,433,2.413,520,0.849,523,3.318,524,2.765,526,3.318,528,3.029,529,5.017,531,3.314,533,3.634,534,4.235,535,2.489,540,2.568,546,2.061,547,2.826,548,2.061,549,3.325,640,4.23,641,4.23,642,3.46,643,4.23,644,4.23,840,3.497,857,1.7,918,2.705,1042,2.493,1176,2.99,1263,2.979,1264,2.493,1265,5.333,1266,5.028,1267,3.421,1268,3.421,1269,3.421,1270,3.421,1271,3.421,1272,3.421,1273,3.421,1274,3.421,1275,3.421,1276,3.421,1277,3.421,1278,3.421,1279,3.421,1280,3.421,1281,2.493,1282,3.421,1283,2.493,1284,2.99]],["title/controllers/ResumesController.html",[0,1.162,1285,3.006]],["body/controllers/ResumesController.html",[0,0.928,2,0.928,3,0.095,4,0.095,5,0.064,7,0.269,8,0.012,9,2.391,12,0.501,19,0.095,20,0.148,28,1.57,33,0.007,34,0.007,77,1.167,106,1.834,114,2.644,121,0.356,122,1.355,124,0.947,126,1.954,127,1.208,132,1.57,140,2.789,141,1.616,143,2.425,146,2.152,147,0.947,148,0.879,149,2.017,170,1.821,174,1.793,179,1.793,180,1.57,181,1.57,185,1.395,329,1.712,338,1.793,343,1.355,344,2.405,345,2.036,346,2.036,351,2.747,355,3.069,358,1.507,361,2.554,362,1.395,363,1.986,367,2.238,369,1.793,370,1.884,371,2.036,374,1.344,376,1.344,379,1.449,380,2.238,382,3.069,383,2.401,384,2.401,386,1.986,387,2.102,392,2.102,535,1.167,642,3.775,651,4.426,849,3.267,851,1.986,903,2.238,910,2.102,969,2.606,1016,2.88,1185,1.793,1186,2.606,1188,2.618,1189,2.88,1191,2.606,1194,2.88,1204,2.401,1263,4.425,1285,3.506,1286,2.88,1287,5.254,1288,4.811,1289,4.811,1290,2.88,1291,3.296,1292,3.296,1293,3.296,1294,3.296,1295,3.296,1296,4.811,1297,3.296,1298,3.296,1299,3.296,1300,3.296,1301,3.296,1302,3.624,1303,2.88,1304,4.141,1305,3.296,1306,3.296,1307,2.88,1308,3.296,1309,2.88,1310,3.296,1311,3.296,1312,3.296,1313,3.296,1314,3.296,1315,3.296,1316,3.296]],["title/modules/ResumesModule.html",[35,0.96,55,2.801]],["body/modules/ResumesModule.html",[2,1.903,3,0.157,4,0.157,5,0.106,7,0.307,8,0.012,12,0.827,19,0.157,20,0.245,33,0.01,34,0.01,35,1.711,37,2.219,38,2.303,39,2.489,40,2.489,41,2.303,42,3.36,43,2.489,55,5.469,59,3.09,60,2.489,61,2.489,63,2.489,65,2.705,66,1.485,402,2.219,1211,4.756,1263,3.279,1283,4.923,1285,5.354,1302,5.137,1303,4.756,1317,4.756,1318,4.756,1319,5.443,1320,5.443,1321,4.756,1322,5.443]],["title/injectables/ResumesService.html",[118,0.819,1302,2.631]],["body/injectables/ResumesService.html",[3,0.07,4,0.07,5,0.047,7,0.266,8,0.013,12,0.366,19,0.07,20,0.108,21,1.546,27,1.059,32,0.982,33,0.005,34,0.005,66,0.657,76,1.196,77,1.66,78,1.196,79,1.163,100,3.046,106,1.623,114,2.72,115,1.376,118,0.752,119,0.882,121,0.26,122,1.067,124,0.877,126,1.73,127,1.107,140,2.612,143,2.216,146,1.994,147,0.935,148,0.814,149,1.869,150,2.926,170,2.06,185,1.019,207,2,209,2.826,272,1.635,278,2.894,291,1.922,298,1.753,306,1.546,319,1.667,322,2.104,329,3.004,335,2.104,336,1.904,338,3.498,343,1.067,344,1.604,345,1.604,346,1.604,351,2.061,358,1.734,361,1.761,362,1.604,371,1.984,374,0.982,376,0.982,405,2.894,409,2.416,415,1.31,419,1.451,420,1.376,421,1.376,425,1.019,426,3.485,430,2.167,433,1.779,436,1.451,437,1.536,438,1.451,439,1.451,440,1.451,441,1.451,442,2.284,443,1.451,446,1.451,447,2.284,448,1.451,449,1.376,451,2.435,454,1.376,455,1.451,456,2.284,457,2.284,461,2.284,465,2.284,467,2.284,468,1.451,469,2.284,471,1.451,475,1.376,477,1.536,478,1.536,479,1.451,484,1.451,485,1.451,499,1.451,505,1.451,508,1.451,509,1.31,510,1.451,511,1.451,512,2.284,513,1.451,514,1.451,515,1.451,524,1.147,528,1.806,531,1.734,535,0.853,640,3.416,641,3.416,642,3.624,643,2.762,644,2.762,651,3.918,840,2.284,849,2.574,851,1.451,894,2.762,935,1.904,969,1.904,1085,2.574,1185,2.063,1188,2.551,1232,1.754,1236,1.754,1263,2.825,1281,1.754,1287,1.904,1290,3.312,1302,2.418,1309,2.104,1321,2.104,1323,2.104,1324,3.791,1325,2.408,1326,2.408,1327,3.791,1328,2.408,1329,2.408,1330,3.791,1331,2.408,1332,2.408,1333,2.408,1334,2.408,1335,2.408,1336,2.408,1337,2.408,1338,2.408,1339,3.791,1340,2.408,1341,2.408,1342,2.408,1343,2.408,1344,3.312,1345,2.408,1346,2.408,1347,2.104,1348,2.997,1349,2.408,1350,2.408,1351,2.408,1352,2.997,1353,3.791,1354,2.408,1355,2.408]],["title/classes/Role.html",[20,0.186,299,1.565]],["body/classes/Role.html",[3,0.112,4,0.112,5,0.075,7,0.241,8,0.012,19,0.179,20,0.174,33,0.008,34,0.008,66,1.054,79,1.337,110,1.368,121,0.418,124,1.086,127,1.101,141,1.854,147,0.847,148,1.056,207,1.16,248,1.38,291,1.64,295,3.224,298,1.693,299,2.045,319,2.729,402,2.198,425,2.627,433,2.355,520,0.958,523,3.547,524,2.956,525,3.224,526,3.547,528,2.956,529,5.022,531,3.346,533,3.547,534,4.046,535,2.591,540,3.488,546,2.328,547,3.08,548,2.328,549,2.842,587,3.739,660,2.729,694,2.815,695,2.464,698,3.055,712,2.464,1265,4.261,1266,4.261,1356,2.815,1357,3.863,1358,3.863,1359,3.863,1360,3.863,1361,3.863,1362,3.863,1363,3.863,1364,3.863,1365,3.863,1366,3.863,1367,3.863,1368,3.376]],["title/controllers/RolesController.html",[0,1.162,1369,3.006]],["body/controllers/RolesController.html",[0,1.014,2,1.014,3,0.104,4,0.104,5,0.07,7,0.277,8,0.012,9,2.548,12,0.547,19,0.104,20,0.162,28,1.715,33,0.007,34,0.007,77,1.275,106,1.818,114,2.755,121,0.389,122,1.444,124,0.939,126,1.937,127,1.207,132,1.715,140,2.749,141,1.602,143,2.358,146,2.134,147,0.939,148,0.871,149,2,170,1.643,174,3.25,180,1.715,181,1.715,185,1.524,186,3.25,299,2.714,306,2.436,343,1.682,344,2.528,345,2.17,346,2.528,351,2.862,358,1.647,361,2.437,362,1.524,363,2.169,365,2.297,367,2.445,369,1.959,370,2.058,371,2.17,374,1.468,376,1.468,379,1.583,382,3.271,386,2.169,387,2.297,509,2.79,652,4.561,660,2.255,886,2.847,891,3.146,896,2.847,903,2.445,905,2.847,906,2.847,908,4.481,910,2.297,1204,2.624,1369,3.737,1370,3.146,1371,3.146,1372,3.146,1373,3.6,1374,3.6,1375,3.6,1376,5.128,1377,3.6,1378,3.6,1379,3.6,1380,3.6,1381,3.6,1382,3.6,1383,5.108,1384,3.6,1385,3.6,1386,3.146,1387,4.055,1388,3.6,1389,3.6,1390,3.6,1391,3.6,1392,3.6,1393,3.6]],["title/modules/RolesModule.html",[35,0.96,56,2.631]],["body/modules/RolesModule.html",[2,1.86,3,0.152,4,0.152,5,0.102,7,0.303,8,0.012,12,0.797,19,0.152,20,0.236,33,0.01,34,0.01,35,1.683,37,2.14,38,2.221,39,2.4,40,2.4,41,2.221,42,3.306,43,3.306,56,5.167,59,3.021,60,2.4,61,2.4,63,2.4,65,2.608,66,1.432,147,0.716,186,4.581,299,1.992,400,3,402,2.14,695,4.213,699,3.825,1369,5.267,1386,4.587,1394,4.587,1395,4.587,1396,4.587,1397,5.249,1398,5.249,1399,4.587]],["title/injectables/RolesService.html",[118,0.819,186,2.244]],["body/injectables/RolesService.html",[3,0.073,4,0.073,5,0.049,7,0.276,8,0.013,12,0.384,19,0.073,20,0.114,21,1.608,27,1.113,33,0.006,34,0.006,35,0.589,66,0.691,76,1.258,77,1.715,78,1.258,79,1.201,100,2.999,106,1.565,114,2.772,115,1.447,118,0.783,119,0.928,121,0.274,122,1.11,124,0.856,126,1.668,127,1.079,140,2.52,143,2.024,146,1.946,147,1.018,148,0.795,149,1.824,150,2.822,170,1.898,185,1.071,186,2.145,207,2.176,209,3.06,272,1.719,278,2.974,279,1.615,291,1.839,295,3.077,298,1.321,299,2.074,306,1.608,319,1.113,329,3.077,338,2.635,343,1.11,344,1.669,345,1.669,346,1.669,351,2.129,358,1.803,361,1.81,362,1.669,371,2.049,374,1.032,376,1.032,405,2.974,409,2.467,415,1.377,419,1.525,420,1.447,421,1.447,425,1.071,426,2.918,430,2.254,433,0.961,436,1.525,437,1.615,438,1.525,439,1.525,440,1.525,441,1.525,442,1.525,443,1.525,446,1.525,447,2.375,448,1.525,449,2.768,451,3.259,454,2.768,455,1.525,456,2.375,457,2.375,461,2.375,465,2.375,467,2.375,468,1.525,469,2.375,471,1.525,475,1.447,477,1.615,478,1.615,479,1.525,484,1.525,485,1.525,499,1.525,505,1.525,508,1.525,509,1.377,510,1.525,511,1.525,512,2.375,513,1.525,514,1.525,515,1.525,524,1.206,525,2.839,587,3.293,631,1.615,632,1.719,652,4.002,705,3.118,712,1.615,714,2.873,720,2.002,737,2.002,894,2.873,935,2.002,981,4.322,1085,1.719,1185,2.145,1188,2.635,1232,1.845,1236,1.845,1344,3.445,1348,2.002,1352,3.118,1372,3.445,1383,4.601,1387,3.118,1399,2.212,1400,2.212,1401,2.532,1402,2.532,1403,2.532,1404,2.532,1405,2.532,1406,2.532,1407,2.532,1408,2.212,1409,3.445,1410,3.943,1411,2.532,1412,3.445,1413,2.532,1414,2.532,1415,2.532,1416,2.532,1417,2.532,1418,2.532,1419,2.532,1420,2.532,1421,3.943,1422,2.532,1423,2.532,1424,2.532,1425,2.532,1426,2.532,1427,2.532]],["title/classes/Subscriber.html",[20,0.186,1043,2.485]],["body/classes/Subscriber.html",[3,0.116,4,0.116,5,0.078,7,0.246,8,0.012,19,0.183,20,0.181,33,0.008,34,0.008,66,1.097,79,1.375,110,1.424,121,0.435,124,1.084,127,1.151,141,1.849,147,0.865,148,1.053,207,1.207,248,1.419,291,1.675,298,2.021,319,2.787,402,2.259,425,2.683,433,2.406,520,0.998,523,3.624,524,3.02,526,3.624,528,3.02,529,5.027,531,3.388,533,3.624,534,3.82,535,2.623,540,2.878,546,2.423,547,3.167,548,2.423,549,2.683,571,3.624,660,1.768,694,2.93,1043,3.339,1044,2.731,1088,2.731,1428,2.93,1429,4.021,1430,4.021,1431,4.021,1432,4.021,1433,4.021,1434,4.021,1435,4.021,1436,4.021,1437,4.021,1438,4.021,1439,3.514]],["title/controllers/SubscribersController.html",[0,1.162,1440,3.006]],["body/controllers/SubscribersController.html",[0,1,2,1,3,0.103,4,0.103,5,0.069,7,0.276,8,0.012,9,2.945,12,0.539,19,0.103,20,0.16,28,1.691,33,0.007,34,0.007,77,1.258,106,1.881,114,2.737,121,0.384,122,1.43,124,0.971,126,2.004,127,1.187,132,1.691,140,2.827,141,1.657,143,2.408,146,2.207,147,0.971,148,0.901,149,2.07,174,1.932,180,1.691,181,1.691,185,1.503,306,2.07,343,1.43,344,2.508,345,2.149,346,2.149,351,2.844,358,1.624,361,2.142,362,1.503,363,3.059,369,2.763,370,2.03,371,2.149,374,1.448,376,1.448,379,1.561,380,2.411,386,3.059,387,2.265,392,2.265,571,2.902,663,4.54,905,2.808,906,2.808,910,2.265,1054,5.411,1185,1.932,1188,2.763,1304,4.713,1307,3.103,1440,3.7,1441,3.103,1442,5.927,1443,3.103,1444,3.551,1445,3.551,1446,3.551,1447,3.551,1448,3.551,1449,3.551,1450,3.551,1451,3.103,1452,4.834,1453,3.551,1454,3.551,1455,3.781,1456,3.103,1457,4.015,1458,3.551,1459,3.551,1460,3.551,1461,3.551,1462,3.551,1463,3.551,1464,3.103,1465,3.551,1466,3.551]],["title/modules/SubscribersModule.html",[35,0.96,57,2.801]],["body/modules/SubscribersModule.html",[2,1.896,3,0.157,4,0.157,5,0.105,7,0.306,8,0.012,12,0.822,19,0.157,20,0.244,33,0.01,34,0.01,35,1.707,37,2.208,38,2.291,39,2.476,40,2.476,41,2.291,42,3.353,43,2.476,57,5.462,59,3.08,60,2.476,61,2.476,63,2.476,65,2.69,66,1.477,147,0.739,400,3.095,402,2.208,1043,3.262,1078,4.281,1088,4.573,1440,5.342,1455,5.13,1456,4.731,1467,4.731,1468,4.731,1469,5.414,1470,5.414,1471,4.731]],["title/injectables/SubscribersService.html",[118,0.819,1455,2.631]],["body/injectables/SubscribersService.html",[3,0.079,4,0.079,5,0.053,7,0.277,8,0.013,12,0.417,19,0.079,20,0.124,21,1.712,27,1.208,33,0.006,34,0.006,66,0.749,76,1.365,77,1.805,78,1.365,79,1.264,100,3.047,106,1.839,110,0.973,114,2.855,115,1.57,118,0.834,119,1.007,121,0.297,122,1.183,124,0.92,126,1.826,127,1.045,140,2.691,143,2.151,146,2.092,147,0.973,148,0.854,149,1.962,150,2.929,170,0.88,185,1.163,207,2.089,209,2.966,272,1.866,278,3.106,291,1.508,298,1.945,306,2.079,329,1.427,338,2.774,343,1.183,344,1.777,345,1.777,346,1.777,351,2.241,358,1.92,361,2.234,362,1.777,371,1.777,374,1.12,376,1.12,405,3.106,409,2.55,415,1.495,419,1.655,420,1.57,421,1.57,425,1.163,426,3.439,429,3.67,430,2.4,433,1.043,436,1.655,437,1.752,438,1.655,439,1.655,440,1.655,441,1.655,442,1.655,443,1.655,446,1.655,447,2.53,448,1.655,449,1.57,451,1.427,454,1.57,455,1.655,456,2.53,457,2.53,461,2.53,465,2.53,467,2.53,468,1.655,469,2.53,471,1.655,475,1.57,479,1.655,484,1.655,485,1.655,499,1.655,505,1.655,508,1.655,509,1.495,510,1.655,511,1.655,512,2.53,513,1.655,514,1.655,515,1.655,524,1.309,571,2.4,663,4.136,764,2.002,1043,1.655,1044,1.866,1051,2.401,1052,3.67,1054,3.321,1126,2.172,1185,2.285,1188,2.774,1232,2.002,1352,3.321,1443,3.67,1451,2.401,1452,4.582,1455,2.679,1457,3.321,1471,2.401,1472,2.401,1473,4.199,1474,2.747,1475,2.747,1476,2.747,1477,2.747,1478,2.747,1479,4.199,1480,2.747,1481,2.747,1482,2.747,1483,4.199,1484,2.747,1485,2.747,1486,2.747,1487,2.747,1488,2.747,1489,2.747,1490,2.747,1491,2.747,1492,2.747,1493,2.747,1494,2.747,1495,4.199,1496,2.747,1497,2.747]],["title/injectables/TransformInterceptor.html",[118,0.819,1255,3.006]],["body/injectables/TransformInterceptor.html",[3,0.14,4,0.14,5,0.094,7,0.296,8,0.012,12,0.735,19,0.181,20,0.218,21,1.975,32,2.838,33,0.009,34,0.009,71,3.288,106,1.28,118,1.245,119,1.775,121,0.524,122,1.767,124,0.856,126,1.364,127,0.71,146,1.946,147,0.856,148,0.795,149,1.824,152,3.089,377,3.829,379,2.129,409,1.904,569,2.467,717,3.528,854,3.089,945,4.231,946,6.179,949,5.365,951,4.572,963,3.829,1246,3.829,1247,5.482,1248,5.482,1249,6.433,1250,6.082,1251,3.829,1252,4.231,1253,4.231,1254,3.528,1255,4.572,1256,6.082,1257,6.433,1258,4.231,1259,4.231,1260,4.231,1261,4.231,1262,4.231,1498,4.842,1499,4.842,1500,4.842]],["title/classes/UpdateCompanyDto.html",[20,0.186,366,2.801]],["body/classes/UpdateCompanyDto.html",[3,0.176,4,0.176,5,0.118,7,0.281,8,0.012,19,0.176,20,0.275,32,2.488,33,0.01,34,0.01,343,1.718,348,3.892,366,4.919,375,4.825,520,1.514,535,2.161,567,3.17,600,4.825,607,4.825,846,3.17,847,3.032,848,2.907,852,3.184,1501,5.332,1502,7.243]],["title/classes/UpdateFileDto.html",[20,0.186,785,2.801]],["body/classes/UpdateFileDto.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,19,0.179,20,0.278,33,0.011,34,0.011,343,1.739,520,1.532,608,3.939,610,4.883,784,4.883,785,4.953,846,3.207,847,3.069,848,2.942,852,3.207,1503,5.396,1504,7.294]],["title/classes/UpdateJobDto.html",[20,0.186,895,2.801]],["body/classes/UpdateJobDto.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,19,0.179,20,0.278,33,0.011,34,0.011,343,1.739,520,1.532,552,4.5,568,3.721,846,3.207,847,3.069,848,2.942,852,3.207,895,4.953,901,4.883,1505,5.396,1506,7.294]],["title/classes/UpdatePermissionDto.html",[20,0.186,1193,2.801]],["body/classes/UpdatePermissionDto.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,19,0.179,20,0.278,33,0.011,34,0.011,343,1.739,520,1.532,628,3.939,630,4.883,846,3.207,847,3.069,848,2.942,852,3.207,1193,4.953,1198,4.883,1507,5.396,1508,7.294]],["title/classes/UpdateResumeDto.html",[20,0.186,851,2.485]],["body/classes/UpdateResumeDto.html",[3,0.138,4,0.138,5,0.093,7,0.295,8,0.012,19,0.138,20,0.342,33,0.009,34,0.009,79,1.187,121,0.518,124,0.653,127,0.913,141,1.114,148,0.928,221,2.686,248,1.594,275,2.966,291,1.265,298,1.306,331,2.449,343,1.348,433,2.782,463,3.094,520,1.187,528,2.28,531,2.189,553,3.357,558,2.486,559,3.752,565,3.766,566,1.952,569,2.449,570,2.104,572,3.388,573,3.053,591,3.559,601,2.378,624,3.785,637,2.884,639,3.053,642,2.604,840,4.977,841,4.537,846,2.486,847,2.378,848,2.966,849,3.25,850,3.785,851,3.752,852,2.738,853,4.924,1509,4.786,1510,4.786]],["title/classes/UpdateRoleDto.html",[20,0.186,1383,2.801]],["body/classes/UpdateRoleDto.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,19,0.179,20,0.278,33,0.011,34,0.011,343,1.739,520,1.532,652,3.939,654,4.883,846,3.207,847,3.069,848,2.942,852,3.207,1383,4.953,1387,4.883,1511,5.396,1512,7.294]],["title/classes/UpdateSubscriberDto.html",[20,0.186,1452,2.801]],["body/classes/UpdateSubscriberDto.html",[3,0.179,4,0.179,5,0.12,7,0.283,8,0.012,19,0.179,20,0.278,33,0.011,34,0.011,343,1.739,520,1.532,663,3.939,665,4.883,846,3.207,847,3.069,848,2.942,852,3.207,1452,4.953,1457,4.883,1513,5.396,1514,7.294]],["title/classes/UpdateUserDto.html",[20,0.186,1515,2.801]],["body/classes/UpdateUserDto.html",[3,0.158,4,0.158,5,0.106,7,0.285,8,0.012,19,0.158,20,0.305,33,0.01,34,0.01,121,0.59,124,0.744,127,0.992,141,1.271,148,0.691,183,3.706,207,2.032,221,2.48,248,1.733,291,2.09,331,2.661,343,1.537,472,4.315,473,4.315,520,1.354,553,2.864,566,2.225,569,2.146,570,2.976,588,3.706,589,4.768,593,3.119,595,4.205,601,2.712,846,2.834,847,2.712,848,2.599,852,2.976,1515,4.596,1516,5.914,1517,6.768,1518,5.457]],["title/classes/UpdatedBy.html",[20,0.186,433,1.565]],["body/classes/UpdatedBy.html",[3,0.139,4,0.139,5,0.093,7,0.295,8,0.012,19,0.139,20,0.343,33,0.009,34,0.009,79,1.193,121,0.52,124,0.852,127,1.017,141,1.454,148,0.964,221,2.289,248,1.599,275,2.29,291,1.833,298,1.892,331,1.891,343,1.354,433,2.888,463,2.389,520,1.193,528,2.29,531,2.199,553,3.407,558,2.497,559,3.763,565,3.774,566,1.961,569,2.456,570,2.114,572,2.616,573,3.067,591,3.57,637,2.897,639,3.067,642,2.616,650,4.202,840,4.699,841,5.054,846,2.497,847,2.389,848,2.975,849,3.265,850,4.939,851,2.897,852,2.114,853,3.802,1519,4.808,1520,4.808]],["title/classes/User.html",[20,0.186,143,1.199]],["body/classes/User.html",[3,0.097,4,0.097,5,0.065,7,0.222,8,0.012,19,0.166,20,0.151,33,0.007,34,0.007,66,0.912,79,1.206,110,2.367,121,0.362,124,1.101,127,1.183,141,1.879,143,1.414,147,0.858,148,1.06,207,1.004,215,4.175,248,1.245,291,1.662,298,1.902,299,2.387,319,2.519,354,2.029,402,1.983,409,1.912,416,2.133,425,2.425,433,2.174,520,0.829,522,3.275,523,3.275,524,2.729,526,3.275,528,2.729,529,5.044,531,3.189,533,3.596,534,4.027,535,2.611,540,2.525,546,2.015,547,2.779,548,2.015,549,3.046,595,3.275,596,3.655,597,3.655,692,2.271,696,2.271,699,2.436,1265,3.845,1266,3.845,1521,2.436,1522,3.344,1523,3.344,1524,3.344,1525,3.344,1526,3.344,1527,3.344,1528,3.344,1529,4.862,1530,3.344,1531,3.344,1532,3.344,1533,3.344,1534,3.344,1535,3.344,1536,3.344,1537,3.344,1538,3.344,1539,4.862,1540,2.922]],["title/controllers/UsersController.html",[0,1.162,1541,3.006]],["body/controllers/UsersController.html",[0,0.976,2,0.976,3,0.1,4,0.1,5,0.067,7,0.274,8,0.012,9,2.481,12,0.527,19,0.1,20,0.156,28,1.652,33,0.007,34,0.007,77,1.228,100,2.983,106,1.792,114,2.708,121,0.375,122,1.406,124,0.925,126,1.909,127,1.182,132,1.652,140,2.727,141,1.579,143,2.437,146,2.103,147,0.925,148,0.859,149,1.971,150,2.786,170,1.599,174,1.887,179,2.716,180,1.652,181,1.652,183,3.39,207,1.041,209,2.572,255,3.182,291,0.916,306,2.035,316,2.742,318,3.03,319,1.525,320,3.03,343,1.406,344,2.475,345,2.113,346,2.113,351,2.813,355,3.184,358,1.586,361,2.338,362,1.467,363,2.089,369,2.716,370,1.982,371,2.113,374,1.414,376,1.414,379,1.525,380,2.355,382,3.184,383,2.527,384,2.527,386,2.089,387,2.212,392,2.212,593,4.036,884,2.742,896,2.742,903,2.355,910,2.212,1185,1.887,1186,2.742,1188,2.716,1191,2.742,1204,2.527,1464,3.03,1515,4.795,1541,3.637,1542,3.03,1543,4.362,1544,3.03,1545,3.467,1546,3.467,1547,3.467,1548,3.467,1549,3.467,1550,3.03,1551,3.467,1552,3.467,1553,3.03,1554,3.03,1555,3.467,1556,3.467,1557,3.467,1558,4.992,1559,3.467,1560,4.992,1561,3.467,1562,3.467]],["title/modules/UsersModule.html",[35,0.96,58,2.631]],["body/modules/UsersModule.html",[2,1.819,3,0.147,4,0.147,5,0.098,7,0.307,8,0.012,12,0.77,19,0.147,20,0.228,33,0.009,34,0.009,35,1.656,37,2.067,38,2.145,39,2.318,40,2.318,41,2.145,42,3.252,43,3.252,58,5.127,59,2.955,60,2.318,61,2.318,63,2.318,65,2.519,66,1.383,143,1.474,147,0.881,255,4.559,299,1.923,400,2.897,402,2.634,692,4.387,695,4.121,696,3.442,697,4.008,699,3.693,1541,5.182,1553,4.429,1563,4.429,1564,5.068,1565,4.429,1566,5.068,1567,5.068,1568,4.429]],["title/injectables/UsersService.html",[118,0.819,255,2.244]],["body/injectables/UsersService.html",[3,0.062,4,0.062,5,0.042,7,0.278,8,0.013,12,0.327,19,0.062,20,0.097,21,1.416,27,1.526,33,0.005,34,0.005,66,0.588,76,1.071,77,1.544,78,1.071,79,1.081,100,2.958,106,1.692,114,2.605,115,1.232,118,0.689,119,0.79,121,0.233,122,0.978,124,0.964,126,1.803,127,1.092,140,2.267,143,2.116,146,2.049,147,1.016,148,0.837,149,1.921,150,2.788,168,2.856,170,1.112,181,1.027,183,2.358,207,2.155,209,2.982,215,3.176,248,0.889,252,3.034,255,1.889,260,3.034,265,1.705,267,2.78,268,2.626,272,1.464,278,3.185,289,1.705,291,1.32,298,1.958,299,2.336,306,1.416,316,2.745,326,1.705,329,1.803,333,3.034,334,3.034,338,1.173,343,0.978,344,1.469,345,1.469,346,1.469,351,1.916,354,1.23,358,1.588,361,1.443,362,0.912,371,1.844,374,0.879,376,0.879,405,3.349,409,2.302,415,1.173,416,1.375,418,1.884,419,1.299,420,1.232,421,1.232,425,0.912,426,1.299,430,1.232,436,1.299,438,1.299,439,1.299,440,1.299,441,1.299,442,1.299,443,1.299,446,1.299,447,2.092,448,1.299,449,2.491,451,2.595,454,1.232,455,1.299,456,2.092,457,2.092,459,2.745,461,2.092,465,2.092,467,2.092,468,1.299,469,2.092,471,1.299,475,1.232,477,1.375,478,1.375,479,1.299,484,1.299,485,1.299,491,2.745,499,1.299,505,1.299,507,2.53,508,1.299,509,1.173,510,1.299,511,1.299,512,2.092,513,1.299,514,1.299,515,1.299,522,2.856,593,3.345,595,3.659,596,3.187,597,3.187,696,1.464,703,1.884,705,3.446,708,3.034,712,1.375,715,2.53,720,1.705,743,3.034,744,3.034,824,2.745,981,3.951,1047,1.705,1085,2.358,1185,1.889,1188,2.371,1236,1.571,1347,3.034,1348,3.951,1408,1.884,1409,1.884,1412,3.034,1515,3.393,1544,3.034,1550,1.884,1554,1.884,1568,1.884,1569,1.884,1570,4.358,1571,4.358,1572,3.472,1573,3.472,1574,3.472,1575,2.156,1576,2.156,1577,2.156,1578,2.156,1579,2.156,1580,2.156,1581,2.156,1582,4.996,1583,2.156,1584,2.156,1585,2.156,1586,2.156,1587,2.156,1588,2.156,1589,2.156,1590,2.156,1591,2.156,1592,2.156,1593,2.156,1594,2.156,1595,3.472,1596,2.156,1597,2.156,1598,3.472,1599,3.472,1600,4.996,1601,3.472,1602,4.996,1603,3.472,1604,3.472,1605,3.472,1606,2.156,1607,2.156,1608,2.156,1609,2.156,1610,2.156]],["title/coverage.html",[1611,4.927]],["body/coverage.html",[0,2.067,1,1.718,5,0.072,6,2.061,8,0.012,13,1.504,17,1.348,20,0.367,30,6.691,33,0.005,34,0.005,41,0.998,72,1.718,118,1.532,120,2.061,130,1.718,131,2.061,140,0.835,143,1.084,148,0.837,152,1.504,168,1.348,170,0.756,177,1.718,179,1.283,180,1.123,182,2.95,186,1.283,227,1.601,228,1.601,247,2.061,255,1.283,299,0.895,340,1.718,341,2.061,348,1.504,354,1.638,366,1.601,372,1.504,398,1.718,403,2.061,414,1.718,416,1.504,433,0.895,521,3.37,551,2.949,552,3.37,568,1.421,588,3.57,593,1.348,599,2.061,600,2.949,608,1.504,609,2.061,610,2.949,628,1.504,629,2.061,630,2.949,637,1.421,638,2.949,639,3.653,651,1.504,652,1.504,653,2.061,654,2.949,660,1.037,663,1.504,664,2.061,665,2.949,682,1.718,683,2.061,685,1.504,692,1.601,693,1.601,695,1.504,700,2.061,711,1.601,712,1.504,713,1.865,714,1.718,715,1.718,731,6.292,766,2.061,767,1.718,768,2.061,782,1.504,785,1.601,808,1.718,811,2.061,821,1.718,822,2.061,840,1.421,841,3.37,851,1.421,854,2.378,856,2.061,857,1.172,858,3.37,877,1.601,878,1.601,880,1.718,881,2.061,895,1.601,899,1.504,919,2.061,940,2.061,941,2.949,958,1.865,959,1.865,990,2.061,1019,2.061,1021,2.061,1028,1.718,1029,2.061,1037,1.504,1043,1.421,1044,1.601,1088,1.601,1104,2.061,1105,2.061,1163,3.37,1178,2.061,1181,1.718,1182,2.061,1193,1.601,1196,1.504,1212,2.061,1246,2.949,1254,1.718,1255,1.718,1263,1.421,1264,3.37,1281,1.718,1283,1.718,1285,1.718,1286,2.061,1302,1.504,1304,1.718,1323,2.061,1356,3.37,1369,1.718,1370,2.061,1383,1.601,1400,2.061,1428,3.37,1440,1.718,1441,2.061,1452,1.601,1455,1.504,1472,2.061,1501,2.061,1503,2.061,1505,2.061,1507,2.061,1511,2.061,1513,2.061,1515,1.601,1516,2.061,1521,3.37,1541,1.718,1542,2.061,1569,2.061,1611,2.061,1612,2.358,1613,2.358,1614,8.286,1615,6.089,1616,6.612,1617,4.625,1618,6.612,1619,5.726,1620,6.612,1621,4.625,1622,5.257,1623,6.377,1624,4.042,1625,5.573,1626,2.358,1627,2.061,1628,2.358,1629,2.358,1630,2.358,1631,2.358,1632,2.358,1633,2.358,1634,2.358,1635,2.358]],["title/dependencies.html",[38,2.101,1636,3.006]],["body/dependencies.html",[8,0.013,12,0.768,16,2.89,20,0.29,33,0.009,34,0.009,38,2.14,66,1.379,71,3.433,76,2.512,77,1.791,78,2.512,79,1.6,90,3.998,93,4.418,178,3.998,184,3.046,232,3.225,235,3.998,237,3.998,281,5.176,371,2.14,420,2.89,421,2.89,558,2.626,566,2.062,787,3.684,830,3.998,847,2.512,848,2.408,999,4.418,1047,3.998,1048,4.418,1251,3.998,1637,7.104,1638,5.056,1639,5.056,1640,5.056,1641,5.056,1642,5.056,1643,5.056,1644,5.056,1645,5.056,1646,5.056,1647,5.056,1648,5.056,1649,6.45,1650,5.056,1651,5.056,1652,5.056,1653,5.056,1654,5.056,1655,5.056,1656,5.056,1657,5.056,1658,5.056,1659,5.056,1660,5.056,1661,5.056,1662,5.056,1663,5.056,1664,5.056,1665,5.056,1666,5.056,1667,5.056,1668,5.056,1669,5.056,1670,5.056]],["title/miscellaneous/functions.html",[1671,2.194,1672,4.337]],["body/miscellaneous/functions.html",[8,0.011,33,0.011,34,0.011,41,3.365,121,0.708,1627,5.722,1671,4.176,1672,5.722,1673,6.548]],["title/index.html",[121,0.372,1674,3.44,1675,3.44]],["body/index.html",[8,0.012,33,0.01,34,0.01,221,1.989,276,3.955,279,4.303,280,4.743,282,5.895,284,3.955,449,3.103,451,2.819,454,3.856,475,3.103,488,4.292,489,5.334,490,5.334,576,4.292,656,5.895,1010,4.743,1040,4.292,1676,5.428,1677,5.428,1678,6.746,1679,5.428,1680,6.746,1681,6.746,1682,6.746,1683,5.428,1684,6.746,1685,7.032,1686,7.032,1687,5.428,1688,5.428,1689,5.428,1690,5.428,1691,5.428,1692,5.428,1693,5.428,1694,5.428,1695,5.428,1696,5.428,1697,5.428,1698,5.428,1699,5.428,1700,5.428,1701,5.428,1702,5.428,1703,5.428,1704,5.428,1705,5.428]],["title/modules.html",[37,2.299]],["body/modules.html",[8,0.01,33,0.01,34,0.01,36,4.04,37,2.261,47,3.766,48,3.766,49,3.766,50,3.766,51,3.766,52,3.766,53,3.766,54,3.766,55,3.766,56,3.537,57,3.766,58,3.537,1068,7.409,1706,8.479,1707,8.479,1708,8.511,1709,5.545,1710,5.545]],["title/overview.html",[1711,4.927]],["body/overview.html",[2,1.068,8,0.012,13,3.919,17,4.269,33,0.008,34,0.008,35,0.883,36,6.192,37,1.546,38,1.605,39,1.734,40,1.734,41,1.605,42,1.734,43,1.734,44,3.314,45,3.314,46,3.314,47,5.518,48,4.764,49,5.072,50,4.764,51,4.173,52,4.764,53,4.764,54,4.764,55,4.764,56,4.764,57,4.764,58,4.764,59,2.433,60,1.734,61,1.734,119,1.39,186,4.064,223,3.314,225,3.314,226,3.314,227,4.173,228,4.173,255,4.147,276,2.763,372,3.919,394,3.314,395,3.314,520,0.941,685,3.919,688,3.314,689,3.314,782,3.919,803,3.314,804,3.314,855,2.999,899,3.919,913,3.314,914,3.314,1037,3.919,1079,3.314,1080,3.314,1196,3.919,1206,3.314,1207,3.314,1302,3.919,1317,3.314,1318,3.314,1394,3.314,1395,3.314,1396,3.314,1455,3.919,1467,3.314,1468,3.314,1563,3.314,1565,3.314,1711,3.314,1712,5.32,1713,3.792,1714,3.792]],["title/properties.html",[248,1.271,1636,3.006]],["body/properties.html",[8,0.012,33,0.011,34,0.011,248,1.65,525,3.348,1685,5.632,1686,5.632,1715,6.445,1716,6.445,1717,6.445,1718,6.445,1719,6.445]],["title/miscellaneous/typealiases.html",[1671,2.194,1720,4.963]],["body/miscellaneous/typealiases.html",[8,0.01,33,0.01,34,0.01,121,0.645,148,0.755,414,5.204,416,4.556,521,4.344,547,4.756,711,4.85,712,4.556,858,4.344,877,4.85,1044,4.85,1163,4.344,1264,4.344,1281,5.204,1356,4.344,1428,4.344,1521,4.344,1671,3.802,1721,5.961,1722,5.209,1723,5.209,1724,5.209,1725,5.209,1726,5.209,1727,5.209,1728,5.209]],["title/miscellaneous/variables.html",[1671,2.194,1729,4.337]],["body/miscellaneous/variables.html",[5,0.025,8,0.012,9,2.569,32,0.535,33,0.003,34,0.003,35,1.757,77,2.128,106,0.347,110,0.81,121,0.142,127,0.665,143,1.641,147,1.029,148,0.574,150,0.625,162,0.956,179,1.245,180,1.09,207,0.394,267,4.239,268,4.004,291,2.162,295,2.145,297,6.592,298,2.067,299,1.382,306,1.849,319,3.317,326,3.265,342,3.608,343,1.277,354,1.462,355,2.892,361,1.502,369,2.467,398,1.667,425,3.192,433,0.498,521,0.956,523,4.312,526,4.312,528,3.593,550,1.147,569,0.9,631,4.812,632,5.123,642,0.714,660,1.816,692,1.554,693,1.554,695,1.459,713,1.809,714,1.667,715,1.667,731,5.497,737,1.038,769,1.038,774,1.147,857,2.052,858,0.956,878,1.554,879,1.147,882,3.265,949,0.956,958,1.809,959,1.809,961,1.147,967,1.147,1004,5.965,1088,1.554,1163,0.956,1180,1.147,1254,2.216,1263,2.488,1264,0.956,1283,1.667,1284,1.147,1287,3.586,1304,1.667,1356,0.956,1368,1.147,1371,3.963,1428,0.956,1439,1.147,1521,0.956,1540,1.147,1543,3.608,1624,1.147,1625,1.147,1671,0.837,1722,1.147,1723,1.147,1724,1.147,1725,1.147,1726,1.147,1727,1.147,1728,1.147,1729,1.147,1730,3.042,1731,4.877,1732,1.313,1733,2.288,1734,7.579,1735,7.579,1736,8.169,1737,8.169,1738,1.313,1739,1.313,1740,7.544,1741,1.313,1742,2.288,1743,1.313,1744,3.042,1745,2.288,1746,1.313,1747,2.288,1748,1.313,1749,2.288,1750,1.313,1751,2.288,1752,2.288,1753,1.313,1754,3.042,1755,2.288,1756,1.313,1757,2.288,1758,1.313,1759,2.288,1760,1.313,1761,2.288,1762,1.313,1763,1.313,1764,1.313,1765,2.288,1766,1.313,1767,2.288,1768,2.288,1769,1.313,1770,3.042,1771,2.288,1772,1.313,1773,2.288,1774,1.313,1775,2.288,1776,1.313,1777,2.288,1778,1.313,1779,2.288,1780,2.288,1781,1.313,1782,2.288,1783,1.313,1784,3.042,1785,2.288,1786,1.313,1787,2.288,1788,1.313,1789,2.288,1790,1.313,1791,1.313,1792,1.313,1793,2.288,1794,1.313,1795,2.288,1796,2.288,1797,1.313,1798,2.288,1799,1.313,1800,3.042,1801,2.288,1802,1.313,1803,2.288,1804,1.313,1805,2.288,1806,1.313,1807,2.288,1808,2.288,1809,1.313,1810,2.288,1811,1.313,1812,3.042,1813,2.288,1814,1.313,1815,2.288,1816,1.313,1817,2.288,1818,1.313,1819,1.313,1820,1.313,1821,1.313,1822,1.313,1823,1.313,1824,1.313]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1716,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":451,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.10",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["10.4.4",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":797,"title":{},"body":{"controllers/FilesController.html":{}}}],["13",{"_index":1712,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.0.3",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1713,"title":{},"body":{"overview.html":{}}}],["2",{"_index":276,"title":{"classes/Company-2.html":{}},"body":{"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["2.0.5",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["2.4.6",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1034,"title":{},"body":{"controllers/MailController.html":{}}}],["2024",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":753,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["3.0.1",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["3.1.10",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1714,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1035,"title":{},"body":{"controllers/MailController.html":{}}}],["6.2.1",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["672a4f9a36e40b68f890b37c",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["7039",{"_index":1705,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["_id:id",{"_index":1238,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["access_token",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":516,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/FilesService.html":{}}}],["adapter",{"_index":1099,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":1598,"title":{},"body":{"injectables/UsersService.html":{}}}],["addfiletypevalidator",{"_index":792,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":795,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":522,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":818,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":737,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["admin@gmail.com",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["age",{"_index":596,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["alias",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":764,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{}}}],["api",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipath",{"_index":631,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":1074,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":13,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":972,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":573,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["array'})@isstring({each",{"_index":625,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["array'})@validatenested()@type(undefined",{"_index":1509,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["async",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":941,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":130,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":942,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1020,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":47,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1719,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":17,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1710,"title":{},"body":{"modules.html":{}}}],["await",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":472,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"classes/UpdateUserDto.html":{}}}],["badrequestexception",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"không",{"_index":1425,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(\"not",{"_index":1344,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception('email",{"_index":1485,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestexception('invalid",{"_index":1336,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestexception(`email",{"_index":1601,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`refresh",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`role",{"_index":1410,"title":{},"body":{"injectables/RolesService.html":{}}}],["based",{"_index":971,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1159,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":974,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["body",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body(\"status",{"_index":1314,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":540,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1708,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1706,"title":{},"body":{"modules.html":{}}}],["build",{"_index":798,"title":{},"body":{"controllers/FilesController.html":{}}}],["báo",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["bước",{"_index":1676,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":488,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"index.html":{}}}],["bản",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["bằng",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["c",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"index.html":{}}}],["callhandler",{"_index":1249,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":943,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1129,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["cb",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1150,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["check",{"_index":824,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["cho",{"_index":486,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["chính",{"_index":1694,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1678,"title":{},"body":{"index.html":{}}}],["citizens",{"_index":759,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["class",{"_index":20,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":520,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":394,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":395,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":688,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":689,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":803,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":804,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":913,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":914,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1079,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1080,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1206,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1207,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1317,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1318,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1394,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1395,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1396,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1467,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1468,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1563,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1565,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1564,"title":{},"body":{"modules/UsersModule.html":{}}}],["companies",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":397,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":340,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":48,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":372,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":354,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":600,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":604,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":605,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":606,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":603,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":401,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["company.save",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companydocument",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":640,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":398,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{}}}],["comparesync",{"_index":1593,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule,configservice",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get(\"email_preview",{"_index":1103,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"jwt_access_token_secret",{"_index":1006,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get(\"mail_host",{"_index":1092,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"password_mail",{"_index":1095,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"sender_mail",{"_index":1094,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongo_url",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1075,"title":{},"body":{"controllers/MailController.html":{}}}],["conflictexception",{"_index":1220,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["conflictexception(\"permission",{"_index":1224,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["connection",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1123,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('payload",{"_index":1007,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('refresh",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log('user",{"_index":969,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["console.log(file",{"_index":801,"title":{},"body":{"controllers/FilesController.html":{}}}],["console.log(newpermission",{"_index":1227,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["const",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1022,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":993,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1213,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1325,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1401,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1474,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1261,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":687,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":788,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":831,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":902,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1050,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1199,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1305,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1388,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1458,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1555,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["countpermissions",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countusers",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1611,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":812,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":883,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1183,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1372,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1443,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1290,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1544,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":348,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1125,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":608,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":568,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":628,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":637,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":652,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":663,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":651,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":593,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":1048,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cronexpression",{"_index":1049,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":509,"title":{},"body":{"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":1188,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cv",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cài",{"_index":1679,"title":{},"body":{"index.html":{}}}],["các",{"_index":490,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"index.html":{}}}],["cách",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["câu",{"_index":1680,"title":{},"body":{"index.html":{}}}],["cần",{"_index":1010,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["cập",{"_index":988,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":489,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"index.html":{}}}],["data",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":684,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":691,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":686,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":682,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":49,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":685,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":531,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date(value",{"_index":585,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1162,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":832,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1179,"title":{},"body":{"classes/Permission.html":{}}}],["decorators",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["decorators/customize",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["default",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1191,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["deleteby",{"_index":518,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["deletedat",{"_index":523,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":524,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{}}}],["denied",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":525,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"properties.html":{}}}],["destination",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1683,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1096,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1178,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{}}}],["domain",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{}}}],["dotenv",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":607,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/UpdateCompanyDto.html":{}}}],["dto/create",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dân",{"_index":1686,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dòng",{"_index":839,"title":{},"body":{"modules/HealthModule.html":{}}}],["dùng/ứng",{"_index":741,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dạng",{"_index":572,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["dạng'})@isnotempty({message",{"_index":676,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dụng",{"_index":507,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["dựa",{"_index":493,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["each",{"_index":574,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email\":\"admin@gmail.com",{"_index":758,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["email\":\"thindz@gmail.com",{"_index":751,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["email\":\"user@gmail.com",{"_index":761,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["email')@cron",{"_index":1033,"title":{},"body":{"controllers/MailController.html":{}}}],["empty",{"_index":602,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["enddate",{"_index":586,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":989,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{}}}],["error('invalid",{"_index":1309,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["error(`error",{"_index":1349,"title":{},"body":{"injectables/ResumesService.html":{}}}],["error.code",{"_index":1128,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["error.message",{"_index":1351,"title":{},"body":{"injectables/ResumesService.html":{}}}],["errorhttpstatuscode",{"_index":799,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception",{"_index":970,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exclude",{"_index":1609,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":499,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existemail",{"_index":1483,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["exists",{"_index":1126,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{}}}],["expiresin",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":852,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["extension",{"_index":1154,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1155,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":997,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1002,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":1004,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fanpage",{"_index":1701,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":784,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":610,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":802,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":786,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":806,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":767,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":50,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":782,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":793,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1161,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(current",{"_index":886,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/RolesController.html":{}}}],["findall(currentpage",{"_index":1185,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(pagecurent",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["findbyusers",{"_index":1324,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1330,"title":{},"body":{"injectables/ResumesService.html":{}}}],["finding",{"_index":1350,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(_id",{"_index":890,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["findone(id",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception(\"bạn",{"_index":986,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1422,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1424,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1558,"title":{},"body":{"controllers/UsersController.html":{}}}],["fs",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1121,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":738,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1672,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":597,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1591,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1596,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1189,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{}}}],["get()@public()@healthcheck",{"_index":825,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('test",{"_index":1032,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1186,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["getpermissions",{"_index":734,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["getresumesbyuser",{"_index":1288,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(@user",{"_index":1308,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(user",{"_index":1295,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1473,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1479,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1674,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1442,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1447,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["gi",{"_index":656,"title":{},"body":{"classes/CreateRoleDto.html":{},"index.html":{}}}],["giới",{"_index":480,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["graph",{"_index":1709,"title":{},"body":{"modules.html":{}}}],["gán",{"_index":1011,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["h",{"_index":743,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["handle",{"_index":1258,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlebarsadapter",{"_index":1086,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":1031,"title":{},"body":{"controllers/MailController.html":{}}}],["hash",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1602,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1592,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1597,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":975,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["health",{"_index":823,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":836,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":827,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":828,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":821,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":51,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":840,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["hiển",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["hiện",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["host",{"_index":1091,"title":{},"body":{"modules/MailModule.html":{}}}],["http",{"_index":1175,"title":{},"body":{"classes/Permission.html":{}}}],["httponly",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://hoidanit.com.vn",{"_index":1696,"title":{},"body":{"index.html":{}}}],["https://www.facebook.com/askitwitheric",{"_index":1702,"title":{},"body":{"index.html":{}}}],["https://www.tiktok.com/@hoidanit",{"_index":1700,"title":{},"body":{"index.html":{}}}],["https://www.udemy.com/user/eric",{"_index":1704,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/@hoidanit",{"_index":1698,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":800,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":547,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hình",{"_index":498,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["hạn",{"_index":481,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["hỏi",{"_index":1685,"title":{},"body":{"index.html":{},"properties.html":{}}}],["hợp",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["id",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id')@get(':id",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{}}}],["id'})@isarray({message",{"_index":661,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["identifier",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["if(!mongoose.types.objectid.isvalid(id",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/SubscribersService.html":{}}}],["if(!updatecompany",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["if(boolean(isinit",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["if(countpermissions",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["if(countrole",{"_index":733,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["if(countusers",{"_index":745,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["if(jobwithmatchingskills.length",{"_index":1060,"title":{},"body":{"controllers/MailController.html":{}}}],["if(permissionexists",{"_index":1223,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["ignoreexpiration",{"_index":1003,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1153,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1157,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":121,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["information')@get('/account",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["init",{"_index":765,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":118,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1335,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1051,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1594,"title":{},"body":{"injectables/UsersService.html":{}}}],["intercept",{"_index":1256,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1499,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":854,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":855,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":587,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":559,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isboolean",{"_index":560,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isdate",{"_index":561,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdate({message",{"_index":615,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":526,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":591,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isexist",{"_index":981,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":592,"title":{},"body":{"classes/Company-2.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotempty",{"_index":553,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["isnotempty()@isemail",{"_index":1520,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty({message",{"_index":601,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":562,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":611,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":563,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispublic",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":564,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isvalid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item",{"_index":578,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["item.company",{"_index":1063,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1062,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1065,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":140,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":505,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["job",{"_index":857,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job')@patch(':id",{"_index":897,"title":{},"body":{"controllers/JobsController.html":{}}}],["job.dto",{"_index":901,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":552,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":556,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:15",{"_index":555,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":621,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:27",{"_index":626,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:33",{"_index":612,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:36",{"_index":620,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:39",{"_index":623,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:42",{"_index":622,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":619,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:48",{"_index":613,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:53",{"_index":627,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:58",{"_index":616,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:62",{"_index":618,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:9",{"_index":554,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":918,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":877,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":641,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":882,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":916,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":900,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":878,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":880,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":52,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":899,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1058,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map(item",{"_index":1061,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1084,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1097,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1151,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i",{"_index":794,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":999,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":72,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1001,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":227,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["khai",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["khác",{"_index":491,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["kiếm",{"_index":1691,"title":{},"body":{"index.html":{}}}],["kiểu",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["kiện",{"_index":513,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["kết",{"_index":477,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["l",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":583,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1717,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":479,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":533,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liên",{"_index":492,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["liệu",{"_index":483,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["local",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":177,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":228,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":580,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["log",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":1599,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@post('/login",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":527,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["làm",{"_index":1677,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["lượng",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lấy",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lệnh",{"_index":1681,"title":{},"body":{"index.html":{}}}],["m",{"_index":497,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["mail",{"_index":1030,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1082,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1038,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1028,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1083,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1089,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1039,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":53,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1037,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":754,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1252,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1260,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":468,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":796,"title":{},"body":{"controllers/FilesController.html":{}}}],["mc",{"_index":755,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["message",{"_index":569,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":508,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":632,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1671,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1016,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ResumesController.html":{}}}],["model",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module,updatedby",{"_index":1235,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1041,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1087,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":598,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["mongoose",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1282,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":549,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":1236,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":829,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":400,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":1211,"title":{},"body":{"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://daanhthinh:hn4fxdjaoct133of@cluster0.clae4.mongodb.net",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get(\"jwt_refresh_expire",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":809,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":808,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":807,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":810,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mọi",{"_index":1687,"title":{},"body":{"index.html":{}}}],["mỗi",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["một",{"_index":504,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["n",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["name",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["name\":\"admin",{"_index":757,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["name\":\"thindz",{"_index":750,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["name\":\"user",{"_index":760,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["name=\"${name",{"_index":1411,"title":{},"body":{"injectables/RolesService.html":{}}}],["name=${name",{"_index":1420,"title":{},"body":{"injectables/RolesService.html":{}}}],["name_admin",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["name_user",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1248,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1040,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"index.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":847,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/HealthModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":787,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":830,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcv",{"_index":1337,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1340,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1341,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob.createdat",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1225,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1228,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?.createdat",{"_index":1229,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newregister",{"_index":1605,"title":{},"body":{"injectables/UsersService.html":{}}}],["newrole",{"_index":1413,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1415,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?.createdat",{"_index":1416,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubscriber",{"_index":1486,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber._id",{"_index":1488,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber.email",{"_index":1489,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":1257,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":594,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["nghĩa",{"_index":495,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["người",{"_index":740,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nh",{"_index":463,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["nhân",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["nhất",{"_index":474,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["nhận",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["nice",{"_index":1073,"title":{},"body":{"controllers/MailController.html":{}}}],["npm",{"_index":1682,"title":{},"body":{"index.html":{}}}],["null",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["number,qs:string",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["này",{"_index":506,"title":{},"body":{"injectables/CompaniesService.html":{},"modules/HealthModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ném",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":535,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{}}}],["objuser",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1250,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1518,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1517,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1100,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1070,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1711,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1636,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagecurent",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["pages",{"_index":511,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":510,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["paginate')@get",{"_index":888,"title":{},"body":{"controllers/JobsController.html":{}}}],["param",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":908,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{}}}],["parameters",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":846,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createcompanydto",{"_index":1502,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1504,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1506,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1508,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":853,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1512,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1514,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1000,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":991,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passpost/jwt.strategy",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passpost/local.strategy",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["passthrough",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":595,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1194,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{}}}],["patch()@responsemessage('update",{"_index":1453,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1085,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1160,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1156,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload._id",{"_index":1008,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1339,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":660,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":984,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1198,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":630,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":636,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":633,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:17",{"_index":634,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:20",{"_index":635,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":983,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":698,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionexists",{"_index":1221,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permissionmodel",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1209,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permission",{"_index":982,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1197,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":693,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1181,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":54,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1196,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phép",{"_index":487,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["phần",{"_index":515,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pipe",{"_index":1259,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1347,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":485,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"skills",{"_index":1460,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1296,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('upload",{"_index":789,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('upload",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":884,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/UsersController.html":{}}}],["post()@skipchecpkermission()@responsemessage('create",{"_index":1291,"title":{},"body":{"controllers/ResumesController.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1102,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["promise",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":529,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1529,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":534,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":248,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1547,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@get()@responsemessage('fetch",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@responsemessage('fetch",{"_index":887,"title":{},"body":{"controllers/JobsController.html":{}}}],["public()@responsemessage('get",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@responsemessage('user",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1152,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1354,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":478,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["qua",{"_index":473,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"classes/UpdateUserDto.html":{}}}],["quantity",{"_index":582,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"current",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["query(\"pagesize",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["query('current",{"_index":905,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["query('pagesize",{"_index":906,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["quyền",{"_index":987,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["quền",{"_index":739,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["received",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["receiver",{"_index":1077,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1122,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1266,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":168,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":820,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":1013,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refreshtoken",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":977,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":979,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1539,"title":{},"body":{"classes/User.html":{}}}],["res",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":152,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie(\"refresh_token",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1254,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"create",{"_index":903,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"delete",{"_index":1204,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"fetch",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"get",{"_index":1307,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"logout",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"register",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"test",{"_index":1053,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage(\"update",{"_index":910,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"upload",{"_index":790,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage(\"user",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('create",{"_index":1373,"title":{},"body":{"controllers/RolesController.html":{}}}],["responsemessage('delete",{"_index":1380,"title":{},"body":{"controllers/RolesController.html":{}}}],["responsemessage('fetch",{"_index":1376,"title":{},"body":{"controllers/RolesController.html":{}}}],["responsemessage('get",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":896,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["result",{"_index":469,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1263,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":849,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":639,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":646,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:13",{"_index":650,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts:16",{"_index":649,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":842,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:19",{"_index":648,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:21",{"_index":843,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:22",{"_index":645,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:25",{"_index":647,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:26",{"_index":845,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:30",{"_index":672,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:34",{"_index":670,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:35",{"_index":1510,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:38",{"_index":671,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:9",{"_index":1519,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.name",{"_index":1322,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1281,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1327,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1287,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1320,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1303,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1283,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1285,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":55,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1302,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":299,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role\":roleadmin?._id",{"_index":756,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["role\":roleuser?._id",{"_index":762,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["role')@delete(':id",{"_index":1381,"title":{},"body":{"controllers/RolesController.html":{}}}],["role')@get",{"_index":1377,"title":{},"body":{"controllers/RolesController.html":{}}}],["role')@patch(':id",{"_index":1384,"title":{},"body":{"controllers/RolesController.html":{}}}],["role')@post",{"_index":1374,"title":{},"body":{"controllers/RolesController.html":{}}}],["role._id",{"_index":1014,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["role.dto",{"_index":1387,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":654,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":657,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":662,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":658,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":655,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":699,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roleadmin",{"_index":746,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["roledata",{"_index":1017,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["roledata.toobject",{"_index":1018,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["roledocument",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1371,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1398,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1386,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":695,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1369,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesmodule",{"_index":56,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":186,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["roleuser",{"_index":748,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["run",{"_index":576,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"index.html":{}}}],["rxjs",{"_index":1251,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1253,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rồi",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["s",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":581,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["salary:`${item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1064,"title":{},"body":{"controllers/MailController.html":{}}}],["salt",{"_index":1595,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schedulemodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":402,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":546,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":550,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":879,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1180,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1284,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1368,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1439,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1540,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":399,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":917,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1210,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1321,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schemas",{"_index":1399,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schemas",{"_index":1471,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1568,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scope",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["secret",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1005,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1093,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1348,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1232,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["server",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":579,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["skills",{"_index":571,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skills:1",{"_index":1494,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":471,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipchecpkermission",{"_index":1304,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipchecpkermission()@post('skills')@responsemessage('get",{"_index":1448,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["soft",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":484,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1722,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1723,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1724,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1725,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schemas.ts",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schemas.ts",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:22",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:145",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":940,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1019,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passpost/jwt.strategy.ts",{"_index":990,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passpost/jwt.strategy.ts:21",{"_index":996,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passpost/jwt.strategy.ts:9",{"_index":994,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passpost/local.strategy.ts",{"_index":1021,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passpost/local.strategy.ts:12",{"_index":1025,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passpost/local.strategy.ts:7",{"_index":1023,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:13",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:20",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:31",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:36",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:41",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":396,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:19",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:33",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:54",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:90",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:96",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":599,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1501,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1176,"title":{},"body":{"classes/Permission.html":{},"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":521,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":530,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":539,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":542,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":536,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":545,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":538,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":532,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":544,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":541,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":537,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":543,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1246,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:20",{"_index":1498,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:24",{"_index":1500,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":683,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":690,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:29",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1408,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/customize",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorators/customize.ts",{"_index":1625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":609,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1503,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":766,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:27",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":805,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":811,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":814,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":815,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":817,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":816,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":813,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:13",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:37",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:9",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":822,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":826,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":835,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":551,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1505,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":881,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:14",{"_index":885,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:25",{"_index":889,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:36",{"_index":892,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:45",{"_index":898,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:54",{"_index":893,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":915,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:13",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:20",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:40",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:76",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:84",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:99",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1042,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":858,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":873,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":859,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":869,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":872,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":871,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":868,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":864,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":874,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":865,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":866,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":861,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":876,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:58",{"_index":863,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":860,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:67",{"_index":875,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:70",{"_index":867,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:73",{"_index":862,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":870,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1029,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:26",{"_index":1036,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1081,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1104,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1627,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":629,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1507,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1182,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:14",{"_index":1184,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:20",{"_index":1187,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:31",{"_index":1190,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:37",{"_index":1195,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:43",{"_index":1192,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1208,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1212,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1214,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:17",{"_index":1215,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:43",{"_index":1216,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:77",{"_index":1217,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:81",{"_index":1219,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:91",{"_index":1218,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":694,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1163,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:14",{"_index":1172,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:17",{"_index":1164,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:20",{"_index":1170,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:23",{"_index":1171,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1166,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1174,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1168,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1165,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":1173,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:51",{"_index":1169,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:54",{"_index":1167,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":638,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":841,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1286,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:15",{"_index":1292,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:22",{"_index":1298,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:32",{"_index":1293,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:42",{"_index":1294,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:48",{"_index":1301,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:54",{"_index":1299,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1319,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1323,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:104",{"_index":1334,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1326,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:132",{"_index":1333,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1328,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:48",{"_index":1329,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:79",{"_index":1332,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:86",{"_index":1331,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1264,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1272,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1280,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1279,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1276,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:24",{"_index":1267,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:27",{"_index":1275,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:30",{"_index":1273,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:40",{"_index":1269,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:46",{"_index":1278,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:52",{"_index":1271,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:58",{"_index":1268,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1277,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:64",{"_index":1274,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:67",{"_index":1270,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":653,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1511,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1370,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:14",{"_index":1375,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:23",{"_index":1378,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:33",{"_index":1379,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:39",{"_index":1385,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:49",{"_index":1382,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1397,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1400,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:108",{"_index":1406,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1402,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1403,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:41",{"_index":1404,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:72",{"_index":1405,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:83",{"_index":1407,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schemas",{"_index":696,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schemas.ts",{"_index":1356,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schemas.ts:10",{"_index":1364,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:13",{"_index":1361,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:16",{"_index":1362,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:20",{"_index":1365,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:24",{"_index":1358,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:30",{"_index":1367,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:36",{"_index":1360,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:42",{"_index":1357,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:45",{"_index":1366,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:48",{"_index":1363,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schemas.ts:51",{"_index":1359,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":664,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1513,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schemas",{"_index":1045,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts",{"_index":1428,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:10",{"_index":1433,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:13",{"_index":1435,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:16",{"_index":1436,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:22",{"_index":1430,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:28",{"_index":1438,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:34",{"_index":1432,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:40",{"_index":1429,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:43",{"_index":1437,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:46",{"_index":1434,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schemas.ts:49",{"_index":1431,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1441,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:13",{"_index":1444,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:22",{"_index":1449,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:29",{"_index":1445,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:39",{"_index":1446,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:47",{"_index":1454,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:52",{"_index":1450,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1469,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1472,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1475,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1476,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:38",{"_index":1477,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:70",{"_index":1478,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:77",{"_index":1480,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:82",{"_index":1482,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:97",{"_index":1481,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1516,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1521,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1533,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1530,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1534,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1523,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1531,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1522,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1524,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1536,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1535,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1526,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1538,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1528,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1525,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1537,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1532,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:67",{"_index":1527,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1542,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:14",{"_index":1545,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":1546,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":1548,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:41",{"_index":1552,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":1549,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":856,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1566,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:117",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:131",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:141",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:145",{"_index":1586,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:159",{"_index":1585,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:182",{"_index":1589,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:189",{"_index":1587,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1588,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:61",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:84",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":584,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1675,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":642,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1247,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":998,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1101,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1071,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1043,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1457,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":665,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:13",{"_index":668,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:6",{"_index":666,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":667,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1067,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber.name",{"_index":1078,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriber.skills",{"_index":1057,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriberdocument",{"_index":1044,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1052,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1054,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.controller",{"_index":1470,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1456,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1088,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1440,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscriberskills",{"_index":1056,"title":{},"body":{"controllers/MailController.html":{}}}],["subscribersmodule",{"_index":57,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1455,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":1124,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1068,"title":{},"body":{"controllers/MailController.html":{},"modules.html":{}}}],["svg",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1127,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":475,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["table",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":978,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith(\"/api/v1/auth",{"_index":985,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":976,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1069,"title":{},"body":{"controllers/MailController.html":{}}}],["tells",{"_index":575,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["temp",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1076,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1098,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":837,"title":{},"body":{"modules/HealthModule.html":{}}}],["th",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/RolesService.html":{},"index.html":{}}}],["tham",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["thi",{"_index":501,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["this.authservice.login(req.user,response",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken,response",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1026,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+pagecurent,+limit,qs",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(+id",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id,user",{"_index":393,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":390,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter",{"_index":470,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":466,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyidandupdate",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete({_id",{"_index":519,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":517,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get(\"is_init",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":834,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.gethashpassword(password",{"_index":1603,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":833,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel.create",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1059,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(_id",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete(updatejob",{"_index":939,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto,user",{"_index":904,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall",{"_index":907,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(_id",{"_index":909,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":912,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(_id",{"_index":911,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":763,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1066,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel.count",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1226,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":1231,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1230,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":735,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid({_id:id",{"_index":1233,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone",{"_index":1222,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete({_id:id",{"_index":1239,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1237,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone({_id:id",{"_index":1234,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1200,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1201,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1202,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1205,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1203,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1262,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":968,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1338,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1346,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1343,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1342,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1345,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1355,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1353,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1306,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1311,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1310,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1312,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1316,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1315,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel.count",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1414,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter",{"_index":1418,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1417,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1423,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id)).populate",{"_index":1419,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":1409,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.findone({name",{"_index":747,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.insertmany",{"_index":736,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1427,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1421,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1389,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+current",{"_index":1390,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1391,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id,user",{"_index":1393,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1392,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel.create",{"_index":1487,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1055,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter",{"_index":1491,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1490,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1484,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone({email",{"_index":1493,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone({id",{"_index":1492,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1497,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1495,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1459,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1462,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1463,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills",{"_index":1461,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1466,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1465,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel.count",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1604,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1608,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1607,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1600,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":749,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.updateone",{"_index":1610,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get(\"password_role",{"_index":752,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1556,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1557,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1559,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1562,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1561,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlerguard",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thuộc",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["thêm",{"_index":838,"title":{},"body":{"modules/HealthModule.html":{},"injectables/JwtStrategy.html":{}}}],["thông",{"_index":1688,"title":{},"body":{"index.html":{}}}],["thống",{"_index":744,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["thức",{"_index":1695,"title":{},"body":{"index.html":{}}}],["thực",{"_index":500,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["tiktok",{"_index":1699,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":548,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":1689,"title":{},"body":{"index.html":{}}}],["token",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["token')@get('/refresh",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":514,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":465,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":467,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tr",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateRoleDto.html":{},"injectables/JobsService.html":{}}}],["trang",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transfer",{"_index":567,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{}}}],["transform",{"_index":557,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":558,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1255,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1090,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":496,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["true",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":502,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["trying",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":459,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/UsersService.html":{}}}],["trường",{"_index":494,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["trống",{"_index":570,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["trống'})@isarray({message",{"_index":624,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/UpdateResumeDto.html":{}}}],["trống'})@isboolean({message",{"_index":617,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({each",{"_index":659,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({message",{"_index":669,"title":{},"body":{"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["trống'})@transform",{"_index":614,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ttl",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1720,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":848,"title":{},"body":{"classes/History.html":{},"injectables/JobsService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":850,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["types/bcryptjs",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["tài",{"_index":482,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["tác",{"_index":1684,"title":{},"body":{"index.html":{}}}],["tên",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["tìm",{"_index":1690,"title":{},"body":{"index.html":{}}}],["tính",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["tại",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tạo",{"_index":1177,"title":{},"body":{"classes/Permission.html":{}}}],["tối",{"_index":464,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["tồn",{"_index":1412,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":512,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["u",{"_index":476,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["udemy",{"_index":1703,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"token",{"_index":973,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception(\"username/password",{"_index":1027,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":1009,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('role",{"_index":1015,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":1265,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unknown",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1718,"title":{},"body":{"properties.html":{}}}],["update",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1464,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{}}}],["update(_id",{"_index":894,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{}}}],["update(updatesubscriberdto",{"_index":1451,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1550,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompany",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["updatecompanydto",{"_index":366,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatecompanydto,user",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["updated",{"_index":1352,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["updatedat",{"_index":528,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":433,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateduser",{"_index":1560,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatefiledto",{"_index":785,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejob",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{}}}],["updatejobdto",{"_index":895,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1193,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":851,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1383,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":819,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1289,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(@param('id",{"_index":1313,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1300,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatesubscriberdto",{"_index":1452,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1515,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1496,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":643,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards,request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":791,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":143,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@patch",{"_index":1551,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post('/logout",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@post('/register",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@skipchecpkermission()@responsemessage('get",{"_index":1297,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user's",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["user._id",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":588,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":590,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:18",{"_index":679,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":677,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":680,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":674,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":678,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":673,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":681,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":675,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:50",{"_index":1244,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:54",{"_index":1242,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:57",{"_index":1245,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:60",{"_index":1241,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:63",{"_index":1243,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:66",{"_index":1240,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:9",{"_index":589,"title":{},"body":{"classes/Company-2.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":697,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/JobsService.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["user:iuser",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["user?.permissions",{"_index":980,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["userdocument",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":644,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userm",{"_index":1590,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":1606,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":1543,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1567,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1554,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1553,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":692,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1541,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":58,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":255,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["ussername",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["v",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"index.html":{}}}],["validate",{"_index":992,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":995,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1024,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":565,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":844,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":577,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validator",{"_index":566,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["value",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["variables",{"_index":1729,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1715,"title":{},"body":{"properties.html":{}}}],["viên",{"_index":742,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["void",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vui",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["vào",{"_index":1012,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["vấn",{"_index":503,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["với",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["website",{"_index":1693,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1072,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1158,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["xác",{"_index":462,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{}}}],["xóa",{"_index":1426,"title":{},"body":{"injectables/RolesService.html":{}}}],["y",{"_index":1692,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["youtube",{"_index":1697,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get, Post, Render, UseGuards,Request } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n\n    //khai báo thuộc tính scope: private readonly\n    //appService: tên variable\n    //AppService: kiểu data\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService\n  ) {}\n\n  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule,ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module'; \nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n@Module({\n  imports: [\n    //MongooseModule.forRoot('mongodb+srv://daanhthinh:Hn4fXdJAOcT133oF@cluster0.clae4.mongodb.net/'),\n    ScheduleModule.forRoot(),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true\n    }),\n    ThrottlerModule.forRoot([{\n      ttl: 60000,\n      limit: 10,\n    }]),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,    \n  ],\n  controllers: [AppController ],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('get user information')@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@ResponseMessage('user login')@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('logout user')@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('get user by refresh token')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('register a new user')@Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Get, Body, Req, Res } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { Public, ResponseMessage, User } from 'src/decorators/customize';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { Request, response, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Controller(\"auth\")\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private roleService: RolesService\n\n    ) { }\n\n    @Public()\n    @UseGuards(LocalAuthGuard)\n    @ResponseMessage(\"user login\")\n    @Post('/login')\n    handleLogin(\n        @Req() req,\n        @Res({ passthrough: true }) response: Response) {\n        return this.authService.login(req.user,response);\n    }\n\n    // @UseGuards(JwtAuthGuard)\n    @Public()\n    @ResponseMessage(\"register a new user\")\n    @Post('/register')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.register(registerUserDto);\n    }\n\n    @ResponseMessage(\"logout user\")\n    @Post('/logout')\n    handleLogout(\n        @Res( { passthrough: true}) response: Response,\n        @User() user: IUser\n    ) {\n        return this.authService.logout(response, user);\n    }\n\n    // @UseGuards(JwtAuthGuard)\n    @ResponseMessage('get user information')\n    @Get('/account')\n    async handleGetAccount(@User() user: IUser) {\n        const temp = await this.roleService.findOne(user.role._id) as any;\n        user.permissions = temp.permissions;\n        return { user };\n    }\n\n    @Public()\n    // @UseGuards(JwtAuthGuard)\n    @ResponseMessage('get user by refresh token')\n    @Get('/refresh')\n    handleRefreshToken(\n        @Req() request: Request,\n        @Res({ passthrough: true }) response: Response\n    ) {\n        const refreshToken = request.cookies['refreshToken'];\n        // console.log('Refresh Token Received:', refreshToken); // Log token nhận được\n        return this.authService.processNewToken(refreshToken,response);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passpost/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passpost/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:92\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private rolesService: RolesService\n    ) { }\n\n    //ussername/ pass là 2 tham số thư viện passport nó ném về\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.usersService.findOneByUsername(username);\n        if (user) {\n            const isValid = this.usersService.isValidPassword(pass, user.password);\n            if (isValid === true) {\n                const userRole = user.role as unknown as { _id: string; name: string }\n                const temp = await this.rolesService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? []\n                }\n\n                return objUser;\n            }\n        }\n\n        return null;\n    }\n\n    async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: \"token login\",\n            iss: \"from server\",\n            _id,\n            name,\n            email,\n            role\n        };\n\n        const refresh_token = this.createRefreshToken(payload);\n\n        //update user with refresh token\n        await this.usersService.updateUserToken(refresh_token, _id);\n\n        //set refresh_token as cookies\n        response.cookie('refresh_token', refresh_token, {\n            httpOnly: true,\n            maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\"))\n        })\n\n        return {\n            access_token: this.jwtService.sign(payload),\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions\n            },\n        };\n    }\n\n    async register(user: RegisterUserDto) {\n        let newUser = await this.usersService.register(user);\n\n        return {\n            _id: newUser?._id,\n            createdAt: newUser?.createdAt\n        };\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refresh_token = this.jwtService.sign(payload, {\n            secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n            expiresIn: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\")) / 1000\n        });\n        return refresh_token;\n    }\n\n    processNewToken = async (refreshToken: string, response: Response) => {\n        try {\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\")\n            })\n            let user = await this.usersService.findUserByToken(refreshToken);\n            if (user) {\n                const { _id, name, email, role } = user;\n                const payload = {\n                    sub: \"token refresh\",\n                    iss: \"from server\",\n                    _id,\n                    name,\n                    email,\n                    role\n                };\n\n                const refresh_token = this.createRefreshToken(payload);\n\n                //update user with refresh token\n                await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n                //fetch user's role\n                const userRole = user.role as unknown as { _id: string; name: string }\n                const temp = await this.rolesService.findOne(userRole._id)\n\n                //set refresh_token as cookies\n                response.clearCookie(\"refresh_token\");\n\n                response.cookie('refresh_token', refresh_token, {\n                    httpOnly: true,\n                    maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRE\"))\n                })\n\n\n                return {\n                    access_token: this.jwtService.sign(payload),\n                    user: {\n                        _id,\n                        name,\n                        email,\n                        role,\n                        permissions: temp?.permissions ?? []\n                    }\n                };\n            } else {\n                throw new BadRequestException(`Refresh token không hợp lệ. Vui lòng login.`)\n            }\n        } catch (error) {\n            throw new BadRequestException(`Refresh token không hợp lệ. Vui lòng login.`)\n        }\n    }\n\n    logout = async (response: Response, user: IUser) => {\n        await this.usersService.updateUserToken(\"\", user._id);\n        response.clearCookie(\"refresh_token\");\n        return \"ok\";\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(pageCurent: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch List Company with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageCurent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Public, ResponseMessage, User } from '../decorators/customize';\n\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage(\"Fetch List Company with paginate\")\n  findAll(\n    @Query(\"current\") pageCurent: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.companiesService.findAll(+pageCurent,+limit,qs);\n    // return qs;\n  }\n\n  @Public()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCompanyDto: UpdateCompanyDto, @User() user: IUser) {\n    return this.companiesService.update(id, updateCompanyDto,user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompaniesController],\n  providers: [CompaniesService]\n})\nexport class CompaniesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(CompanyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        CompanyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(pageCurent: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageCurent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { UserDocument } from 'src/users/schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\n@Injectable()\nexport class CompaniesService {\n\n  constructor(\n    @InjectModel(Company.name) \n    private CompanyModel: SoftDeleteModel\n  ) {}\n\n  async create(createCompanyDto: CreateCompanyDto, user:IUser) {\n    return this.CompanyModel.create(\n      {\n        ...createCompanyDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      } \n    );  \n    //  const company = new this.CompanyModel()\n    // return company.save();\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id)) {\n      return \"not found company\";\n    }\n    const updateCompany = await this.CompanyModel.findByIdAndUpdate(\n      id, \n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }, \n      { new: true }\n    ); \n    if(!updateCompany) {\n      return \"not found company\";\n    }\n    return updateCompany;\n  }\n\n  async findAll(pageCurent: number, limit: number,qs:string) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let { sort } = aqp(qs); \n    //offset được tính bằng cách lấy số trang hiện tại trừ đi 1 rồi\n    // nhân với số lượng bản ghi hiển thị trên mỗi trang\n    let offset = (+pageCurent - 1) * (+limit);\n    //defaultLimit xác định số lượng bản ghi tối đa trên mỗi trang\n    let defaultLimit = +limit ? +limit : 10; \n    const totalItems = (await this.CompanyModel.find(filter)).length; \n    const totalPages = Math.ceil(totalItems / defaultLimit)\n\n    const result = await this.CompanyModel.find(filter) \n    //skip(offset): bỏ qua số lượng bản ghi nhất định từ đầu kết quả\n    .skip(offset) \n    //limit(defaultLimit): giới hạn số lượng tài liệu được trả về\n    .limit(defaultLimit)\n    .sort(sort as any) \n    //populate(population): cho phép bạn lấy dữ liệu từ các tài liệu khác (liên kết) dựa \n    //trên các trường đã định nghĩa trong mô hình.\n    .populate(population) \n    //exec(): thực thi truy vấn và trả về một Promise. Điều này cho phép bạn sử dụng await để đợi kết quả.\n    .exec();\n\n    return { \n      meta: { current: pageCurent, //trang hiện tại \n      pageSize: limit, //số lượng bản ghi đã lấy \n      pages: totalPages, //tổng số trang với điều kiện query \n      total: totalItems // tổng số phần tử (số bản ghi) \n      \n      },\n      result //kết quả query \n    }\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} company`;\n  }\n\n  \n\n  async remove(id: string, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id)) {\n      return \"not found company\";\n    }\n    await this.CompanyModel.updateOne(\n      {_id: id},\n      {\n        deleteBy: {\n          _id: id,\n          email: user.email\n        }\n      }\n    );\n    return this.CompanyModel.softDelete({_id: id});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop()\n    name: string;\n\n    @Prop()\n    address: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'skills không được để trống', })\n    @IsArray({ message: 'skills có định dạng là array', })\n    // \"each\" tells class-validator to run the validation on each item of the array\n    @IsString({ each: true, message: \"skill định dạng là string\" })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'location không được để trống', })\n    location: string;\n\n    @IsNotEmpty({ message: 'salary không được để trống', })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống', })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống', })\n    level: string;\n\n    @IsNotEmpty({ message: 'description không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate không được để trống', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate không được để trống', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate có định dạng là Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive không được để trống', })\n    @IsBoolean({ message: 'isActive có định dạng là boolean' })\n    isActive: boolean;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role không được để trống', })\n    @IsMongoId({ message: 'Role có định dạng là mongo id', })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'address is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n    @IsNotEmpty({message: 'name is empty'})\n    name: string;\n\n    @IsNotEmpty({message: 'address is empty'})\n    address: string;\n\n    @IsNotEmpty({message: 'description is empty'})\n    description: string;\n\n    @IsNotEmpty({message: 'Logo is empty'})\n    logo: string;\n}\n//dto: data transfer object\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'endDate không được để trống'})@Transform( => )@IsDate({message: 'endDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có định dạng là boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'quantity không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'salary không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills không được để trống'})@IsArray({message: 'skills có định dạng là array'})@IsString({each: true, message: 'skill định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'startDate không được để trống'})@Transform( => )@IsDate({message: 'startDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n\n    @IsNotEmpty()\n    logo: string;\n}\n\nexport class CreateJobDto {\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'skills không được để trống', })\n    @IsArray({ message: 'skills có định dạng là array', })\n    // \"each\" tells class-validator to run the validation on each item of the array\n    @IsString({ each: true, message: \"skill định dạng là string\" })\n    skills: string[];\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n\n    @IsNotEmpty({ message: 'location không được để trống', })\n    location: string;\n\n    @IsNotEmpty({ message: 'salary không được để trống', })\n    salary: number;\n\n    @IsNotEmpty({ message: 'quantity không được để trống', })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'level không được để trống', })\n    level: string;\n\n    @IsNotEmpty({ message: 'description không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'startDate không được để trống', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'startDate có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'endDate không được để trống', })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'endDate có định dạng là Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'isActive không được để trống', })\n    @IsBoolean({ message: 'isActive có định dạng là boolean' })\n    isActive: boolean;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n\n\n\nexport class CreatePermissionDto {\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n    \n    @IsNotEmpty({ message: 'apiPath không được để trống', })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'method không được để trống', })\n    method: string;\n    \n    @IsNotEmpty({ message: 'module không được để trống', })\n    module: string;\n}\n\n\n\n//dto: data transfer object\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\n\nexport class CreateResumeDto {\n\n    @IsNotEmpty({ message: 'email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được để trống', })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'status không được để trống', })\n    status: string;\n\n    @IsNotEmpty({ message: 'companyId không được để trống', })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được để trống', })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId không được để trống', })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được để trống', })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions không được để trống'})@IsMongoId({each: true, message: 'each permission là mongo object id'})@IsArray({message: 'permissions có định dạng là array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'description không được để trống', })\n    description: string;\n\n    @IsNotEmpty({ message: 'isActive không được để trống', })\n    @IsBoolean({ message: 'isActive có giá trị boolean' })\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'permissions không được để trống', })\n    @IsMongoId({ each: true, message: \"each permission là mongo object id\" })\n    @IsArray({ message: 'permissions có định dạng là array', })\n    permissions: mongoose.Schema.Types.ObjectId[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skill không được để trống'})@IsArray({message: 'skill không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'name không được để trống', })\n    name: string;\n\n    @IsNotEmpty({ message: 'skill không được để trống', })\n    @IsArray({ message: 'skill không được để trống'})\n    skills: string[];\n\n    \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\n\nexport class CreateResumeDto {\n\n    @IsNotEmpty({ message: 'email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được để trống', })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'status không được để trống', })\n    status: string;\n\n    @IsNotEmpty({ message: 'companyId không được để trống', })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được để trống', })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được để trống', })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId không được để trống', })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được để trống', })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})@IsMongoId({message: 'Role có định dạng là mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role không được để trống', })\n    @IsMongoId({ message: 'Role có định dạng là mongo id', })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, permissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role,  RoleSchema } from 'src/roles/schemas/role.schemas';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Permission.name, schema: permissionSchema },\n    { name: Role.name, schema: RoleSchema },\n  ])]\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, permissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schemas';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { INIT_PERMISSIONS, NAME_ADMIN, NAME_USER } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit{\n    private readonly logger = new Logger(DatabasesService.name);\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService\n    ) {}\n\n\n    async onModuleInit() {\n        const isInit = await this.configService.get(\"IS_INIT\");\n        \n\n        if(Boolean(isInit)) {\n            const countPermissions = await this.permissionModel.count({});\n            const countUsers = await this.userModel.count({});\n            const countRole = await this.roleModel.count({});\n            if(countPermissions === 0) {\n                await this.permissionModel.insertMany(INIT_PERMISSIONS);\n            }\n            \n            if(countRole === 0) {\n                const getPermissions = await this.permissionModel.find({}).select('_id');\n                await this.roleModel.insertMany([\n                    {\n                        \"name\": NAME_ADMIN,\n                        \"description\": \"Admin thì full quền\",\n                        \"isActive\": true,\n                        \"permissions\": getPermissions\n                    },\n                    {\n                        \"name\": NAME_USER,\n                        \"description\": \"Người dùng/Ứng viên sử dụng hệ thống\",\n                        \"isActive\": true,\n                        \"permissions\": []\n                    }\n                ]);\n            }\n\n            if(countUsers === 0) {\n                const roleAdmin = await this.roleModel.findOne({name: NAME_ADMIN});\n                const roleUser = await this.roleModel.findOne({name: NAME_USER});\n                \n                await this.userModel.insertMany([\n                    {\n                        \"name\":\"thindz\",\n                        \"email\":\"thindz@gmail.com\",\n                        \"password\": await this.userService.getHashPassword(this.configService.get(\"PASSWORD_ROLE\")),\n                        \"age\": 21,\n                        \"gender\": \"male\",\n                        \"address\": \"mc\",\n                        \"role\":roleAdmin?._id\n                    },\n                    {\n                        \"name\":\"admin\",\n                        \"email\":\"admin@gmail.com\",\n                        \"password\": await this.userService.getHashPassword(this.configService.get(\"PASSWORD_ROLE\")),\n                        \"age\": 21,\n                        \"gender\": \"male\",\n                        \"address\": \"citizens\",\n                        \"role\":roleAdmin?._id\n                    },\n                    {\n                        \"name\":\"user\",\n                        \"email\":\"user@gmail.com\",\n                        \"password\": await this.userService.getHashPassword(this.configService.get(\"PASSWORD_ROLE\")),\n                        \"age\": 21,\n                        \"gender\": \"male\",\n                        \"address\": \"citizens\",\n                        \"role\":roleUser?._id\n                    }\n                ]);\n            }\n            if(countPermissions >0 && countRole >0 && countUsers >0) {\n                this.logger.log(\">>> ALREADY INIT SAMPLE DATA...\")\n            }\n        }\n\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorators/customize';\n\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload')\n  @ResponseMessage(\"Upload Single File\")\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /^(jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1 * 1024 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    ) \n    file: Express.Multer.File) {\n    console.log(file);\n    return { fileName: file.filename };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [MulterModule.registerAsync({\n    useClass: MulterConfigService,\n  })\n],\n  controllers: [FilesController],\n  providers: [FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from '@nestjs/terminus';\nimport { Public } from 'src/decorators/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n  @Get() \n  @Public() \n  @HealthCheck() \n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    TerminusModule,\n    MongooseModule.forFeature([]) // Thêm dòng này\n  ],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n}\n\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history không được để trống', })\n    @IsArray({ message: 'history có định dạng là array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string;\n    name: string;\n    email: string;\n    role: {\n        _id: string;\n        name: string;\n    };\n    permissions?: {\n        _id: string;\n        name: string;\n        apiPath: string;\n        module: string;\n    }[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string;\n    };\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('create new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('fetch job with paginate')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Fetch a job by id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('update a job')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorators/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage(\"create new job\")\n  create(\n    @Body() createJobDto: CreateJobDto,\n    @User() user: IUser\n  ) {\n    return this.jobsService.create(createJobDto,user);\n    \n  }\n\n  @Public()\n  @ResponseMessage(\"fetch job with paginate\")\n  @Get()\n  findAll(\n    @Query('current') current: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string\n  ) {\n    return this.jobsService.findAll(+ current, + limit, qs);\n  }\n\n  @Public()\n  @ResponseMessage(\"Fetch a job by id\")\n  @Get(':id')\n  findOne(\n    @Param('id') _id: string, \n  ) {\n    \n    return this.jobsService.findOne(_id);\n  }\n\n  @ResponseMessage(\"update a job\")\n  @Patch(':id')\n  update(\n    @Param('id') _id: string, \n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser\n  ) {\n    return this.jobsService.update(_id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { create } from 'domain';\nimport mongoose, { Types } from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel\n  ) {}\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    \n    const newJob = await this.jobModel.create(\n      {\n        ...createJobDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n\n    );\n\n    return {\n      _id: user._id,\n      createdAt: newJob.createdAt \n         \n    }\n  }\n\n  async findAll( current: number, limit: number, qs: string) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    let { sort } = aqp(qs); \n    //offset được tính bằng cách lấy số trang hiện tại trừ đi 1 rồi\n    // nhân với số lượng bản ghi hiển thị trên mỗi trang\n    let offset = (+current - 1) * (+limit);\n    //defaultLimit xác định số lượng bản ghi tối đa trên mỗi trang\n    let defaultLimit = +limit ? +limit : 10; \n    const totalItems = (await this.jobModel.find(filter)).length; \n    const totalPages = Math.ceil(totalItems / defaultLimit)\n\n    const result = await this.jobModel.find(filter) \n    //skip(offset): bỏ qua số lượng bản ghi nhất định từ đầu kết quả\n    .skip(offset) \n    //limit(defaultLimit): giới hạn số lượng tài liệu được trả về\n    .limit(defaultLimit)\n    .sort(sort as any) \n    //populate(population): cho phép bạn lấy dữ liệu từ các tài liệu khác (liên kết) dựa \n    //trên các trường đã định nghĩa trong mô hình.\n    .populate(population) \n    //exec(): thực thi truy vấn và trả về một Promise. Điều này cho phép bạn sử dụng await để đợi kết quả.\n    .exec();\n\n    return { \n      meta: { current: current, //trang hiện tại \n      pageSize: limit, //số lượng bản ghi đã lấy \n      pages: totalPages, //tổng số trang với điều kiện query \n      total: totalItems // tổng số phần tử (số bản ghi) \n      \n      },\n      result //kết quả query \n    }\n  }\n\n  async findOne(_id: string) {\n    if (!mongoose.Types.ObjectId.isValid(_id))\n      return `not found job`;\n\n    return  await this.jobModel.findById(_id);\n    \n  }\n\n  async update(_id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    const updateJob = await this.jobModel.updateOne(\n      {_id: _id}, \n      {...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          name: user.name\n        }\n      }\n    );\n    return {\n      updateJob\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    const updateJob = await this.jobModel.updateOne(\n      {_id: id},\n      {\n        deletedBy: {\n          _id: user._id,\n          name: user.name\n        }\n      }\n    )\n    return this.jobModel.softDelete(updateJob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    ForbiddenException,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorators/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n        super();\n    }\n\n    canActivate(context: ExecutionContext) {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info, context: ExecutionContext) {\n        const request: Request = context.switchToHttp().getRequest();\n\n        const isPublicPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        // console.log('User in handleRequest:', user);\n        // You can throw an exception based on either \"info\" or \"err\" arguments\n        if (err || !user) {\n            throw err || new UnauthorizedException(\"Token không hợp lệ or không có token ở Bearer Token ở Header request!\");\n        }\n\n         //check permissions\n         const targetMethod = request.method;\n         const targetEndpoint = request.route?.path as string;\n \n         const permissions = user?.permissions ?? [];\n         let isExist = permissions.find(permission =>\n             targetMethod === permission.method\n             &&\n             targetEndpoint === permission.apiPath\n         )\n         if (targetEndpoint.startsWith(\"/api/v1/auth\")) isExist = true;\n         if (!isExist && !isPublicPermission) {\n             throw new ForbiddenException(\"Bạn không có quyền để truy cập endpoint này!\")\n         }\n \n         return user;\n \n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passpost/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passpost/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passpost/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private configService: ConfigService,\n        private rolesService: RolesService\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get(\"JWT_ACCESS_TOKEN_SECRET\"),\n        });\n    }\n\n    async validate(payload: IUser) {\n        // console.log('Payload:', payload);\n        if (!payload || !payload._id) {\n            throw new UnauthorizedException('Invalid token payload');\n        }\n\n        const { _id, name, email, role } = payload;\n        // cần gán thêm permissions vào req.user\n        const userRole = role as unknown as { _id: string; name: string }\n        \n        if (!role || !role._id) {\n            throw new UnauthorizedException('Role information is missing');\n        }\n\n        const roleData = await this.rolesService.findOne(userRole._id);\n        if (!roleData) {\n        throw new UnauthorizedException('Role not found');\n        }\n\n        const temp = roleData.toObject();\n\n\n        //req.user\n        return {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? []\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passpost/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passpost/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passpost/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException(\"Username/password không hợp lệ!\");\n        }\n        return user; //req.user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('* * 20 * * 6')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorators/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schemas/subscriber.schemas';\nimport { compare } from 'bcryptjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Controller('mail')\nexport class MailController {\n  constructor(private readonly mailService: MailService,\n    private mailerService: MailerService,\n    @InjectModel(Job.name) private JobModel: SoftDeleteModel,\n    @InjectModel(Subscriber.name) private SubscriberModel: SoftDeleteModel\n\n) {}\n\n  \n  @Get()\n  @Public()\n  @ResponseMessage(\"Test email\")\n  @Cron('* * 20 * * 6')\n  async handleTestEmail() {\n     \n\n    const subscribers = await this.SubscriberModel.find({});\n    for( const subscriber of subscribers) {\n      const subscriberSkills = subscriber.skills;\n      const jobWithMatchingSkills = await this.JobModel.find({ skills: {$in: subscriberSkills}});\n      if(jobWithMatchingSkills.length > 0) {\n        const jobs = jobWithMatchingSkills.map(item => {\n          return {\n            name: item.name,\n            company: item.company,\n            salary:`${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" đ\",\n            skills: item.skills\n          }\n        })\n        await this.mailerService.sendMail({\n          to: subscriber.email,\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'job', \n          context: {\n            receiver: subscriber.name , \n            jobs: jobs\n          }\n        });\n      }\n      \n      \n    }\n    \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schemas';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Job.name, schema: JobSchema },\n      { name: Subscriber.name, schema: SubscriberSchema }\n\n    ]),\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get(\"MAIL_HOST\"),\n          secure: false,\n          auth: {\n            user: configService.get(\"SENDER_MAIL\"),\n            pass: configService.get(\"PASSWORD_MAIL\"),\n          },\n        },\n\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n          preview: configService.get(\"EMAIL_PREVIEW\") === 'true' ? true : false,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n\n  controllers: [MailController],\n  providers: [MailService]\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterModuleOptions, MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n    getRootPath = () => {\n        return process.cwd();\n    };\n\n    ensureExists(targetDirectory: string) {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n            if (!error) {\n                console.log('Directory successfully created, or it already exists.');\n                return;\n            }\n            switch (error.code) {\n                case 'EEXIST':\n                    // Error:\n                    // Requested location already exists, but it's not a directory.\n                    break;\n                case 'ENOTDIR':\n                    // Error:\n                    // The parent hierarchy contains a file with the same name as the dir\n                    // you're trying to create.\n                    break;\n                default:\n                    // Some other error like permission denied.\n                    console.error(error);\n                    break;\n            }\n        });\n    }\n\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: diskStorage({\n                destination: (req, file, cb) => {\n                    const folder = req?.headers?.folder_type ?? \"default\";\n                    this.ensureExists(`public/images/${folder}`);\n                    cb(null, join(this.getRootPath(), `public/images/${folder}`))\n                },\n                filename: (req, file, cb) => {\n                    //get image extension\n                    let extName = path.extname(file.originalname);\n\n                    //get image's name (without extension)\n                    let baseName = path.basename(file.originalname, extName);\n\n                    let finalName = `${baseName}-${Date.now()}${extName}`\n                    cb(null, finalName)\n                }\n            })\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { request } from 'http';\nimport mongoose, { Date, HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n//tạo documentation\nexport type permissionDocument = HydratedDocument;\n//decorator\n@Schema({\n  timestamps: true,\n})\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n  \n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop({ type: Date })\n  deletedAt: Date;\n}\n\nexport const permissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorators/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new permission\")\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch permissions with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, qs);\n  }\n\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch a permission by id\")\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update a permission\")\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a permission\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, permissionSchema } from './schemas/permission.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{name: Permission.name, schema: permissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService]\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Permission, permissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name) private permissionModel: SoftDeleteModel\n  ) {}\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const { email, _id } = user;\n\n    const permissionExists = await this.permissionModel.findOne({ apiPath, module});\n    if(permissionExists) {\n      throw new ConflictException(\"permission already exists\");\n    }\n\n    const newpermission = await this.permissionModel.create({\n      name, \n      apiPath, \n      method, \n      module,\n      createdBy: { _id, email },\n      \n    });\n    // console.log(newpermission);\n    return {\n      _id: newpermission?._id,\n      createdAt: newpermission?.createdAt,\n    };\n    \n\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.permissionModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages,  //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n\n\n\n  findOne(id: string) {\n    return this.permissionModel.findById({_id:id}); \n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    const {name, apiPath, method, module} = updatePermissionDto\n    return await this.permissionModel.updateOne({_id:id}, \n      {name, apiPath, method, module,updatedBy: {\n      _id: user._id,\n      email: user.email\n      }\n    });\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found permission';\n    }\n    await this.permissionModel.updateOne(\n      {_id:id}, \n      { deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n\n    await this.permissionModel.softDelete({_id:id}) \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\n//data transfer object // class = { }\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n\n    @IsNotEmpty({ message: 'Role không được để trống', })\n    @IsMongoId({ message: 'Role có định dạng là mongo id', })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class RegisterUserDto {\n\n    @IsNotEmpty({ message: 'Name không được để trống', })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng', })\n    @IsNotEmpty({ message: 'Email không được để trống', })\n    email: string;\n\n    @IsNotEmpty({ message: 'Password không được để trống', })\n    password: string;\n\n    @IsNotEmpty({ message: 'Age không được để trống', })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được để trống', })\n    gender: string;\n\n    @IsNotEmpty({ message: 'Address không được để trống', })\n    address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from '../decorators/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n        constructor(private reflector: Reflector) {\n        }\n    \n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop()\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.Array })\n    history: {\n        status: string;\n        updatedAt: Date;\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId;\n            email: string;\n        };\n    }[]\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@SkipChecPkermission()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@SkipChecPkermission()@ResponseMessage('Get Resumes by User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { Public, ResponseMessage, SkipChecPkermission, User } from 'src/decorators/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @SkipChecPkermission()\n  @ResponseMessage(\"Create a new resume\")\n  create(@Body() createUserCvDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createUserCvDto, user);\n  }\n\n  @Post('by-user')\n  @SkipChecPkermission()\n  @ResponseMessage(\"Get Resumes by User\")\n  getResumesByUser(@User() user: IUser) {\n    // console.log('User:', user);\n    if (!user || !user._id) {\n      throw new Error('Invalid user object or missing user ID');\n    } \n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch all resumes with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch a resume by id\")\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update status resume\")\n  updateStatus(@Param('id') id: string, @Body(\"status\") status: string, @User() user: IUser) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a resume by id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{name: Resume.name, schema: ResumeSchema}])],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule {}\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUsers\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsers(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel\n  ) { }\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    if (!user || !user.email || !user._id) {\n      throw new BadRequestException('Invalid user data');\n    }\n    const { url, companyId, jobId } = createUserCvDto;\n    const { email, _id } = user;\n\n    const newCV = await this.resumeModel.create({\n      url, companyId, email, jobId,\n      userId: _id,\n      status: \"PENDING\",\n      createdBy: { _id, email },\n      history: [\n        {\n          status: \"PENDING\",\n          updatedAt: new Date,\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      ]\n    })\n\n    return {\n      _id: newCV?._id,\n      createdAt: newCV?.createdAt\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.resumeModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages,  //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"not found resume\")\n    }\n\n    return await this.resumeModel.findById(id);\n  }\n  async findByUsers(user: IUser) {\n    // console.log('User:', user);\n    try {\n      if (!user || !user._id) {\n        throw new Error('Invalid user object');\n      }\n      return await this.resumeModel.find({ userId: user._id })\n        .sort(\"-createdAt\")\n        .populate([\n          { path: \"companyId\", select: { name: 1 } },\n          { path: \"jobId\", select: { name: 1 } }\n        ]);\n    } catch (error) {\n      throw new Error(`Error finding resumes: ${error.message}`);\n    }\n  }\n  \n\n  async update(_id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(\"not found resume\")\n    }\n\n    const updated = await this.resumeModel.updateOne(\n      { _id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date,\n            updatedBy: {\n              _id: user._id,\n              email: user.email\n            }\n          }\n        }\n      });\n\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n    return this.resumeModel.softDelete({\n      _id: id\n    })\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schemas.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new role')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch Permission with role')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch a role by id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete a role')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a role')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorators/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @ResponseMessage(\"Create a new role\")\n  @Post()\n  create(\n    @Body() createRoleDto: CreateRoleDto,\n    @User() user: IUser\n  ) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @ResponseMessage(\"Fetch Permission with role\")\n  @Get()\n  findAll(\n    @Query('current') current: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string\n  ) {\n    return this.rolesService.findAll(+current, +limit, qs);\n  }\n\n  @ResponseMessage(\"Fetch a role by id\")\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @ResponseMessage(\"Update a role\")\n  @Patch(':id')\n  update(\n    @Param('id') id: string, \n    @Body() updateRoleDto: UpdateRoleDto, \n    @User() user: IUser\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @ResponseMessage(\"Delete a role\")\n  @Delete(':id')\n  remove(\n    @Param('id') id: string,\n    @User() user: IUser\n  ) {\n    return this.rolesService.remove(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schemas';\n\n@Module({\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Role, RoleDocument } from './schemas/role.schemas';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { NAME_ADMIN } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel\n  ) { }\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) {\n      throw new BadRequestException(`Role với name=\"${name}\" đã tồn tại!`)\n    }\n\n    const newRole = await this.roleModel.create({\n      name, description, isActive, permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n\n    return {\n      _id: newRole?._id,\n      createdAt: newRole?.createdAt\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.roleModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages,  //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"not found role\")\n    }\n\n    return (await this.roleModel.findById(id)).populate({\n      path: \"permissions\",\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 }\n    });\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException(\"not found role\")\n    }\n\n    const { name, description, isActive, permissions } = updateRoleDto;\n\n    // const isExist = await this.roleModel.findOne({ name });\n    // if (isExist) {\n    //   throw new BadRequestException(`Role với name=${name} đã tồn tại!`)\n    // }\n\n    const updated = await this.roleModel.updateOne(\n      { _id },\n      {\n        name, description, isActive, permissions,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n\n    return updated;\n  }\n\n  async remove(id: string, user: IUser) {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === NAME_ADMIN) {\n      throw new BadRequestException(\"Không thể xóa role ADMIN\");\n    }\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n    return this.roleModel.softDelete({\n      _id: id\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schemas.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop()\n    email: string;\n\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n\n    \n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipChecPkermission()@Post('skills')@ResponseMessage('Get subscribers skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('update subscribers ')@SkipChecPkermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, SkipChecPkermission, User } from 'src/decorators/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  create(@Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @SkipChecPkermission()\n  @Post(\"skills\")\n  @ResponseMessage(\"Get subscribers skills\")\n  getUserSkills(\n    @User() user: IUser\n  ) {\n    return this.subscribersService.getSkills( user);\n  }\n\n  @Get()\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @ResponseMessage(\"update subscribers \")\n\n  @SkipChecPkermission()\n  update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schemas';\n\n@Module({\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n  imports: [MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }])]\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(SubscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        SubscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schemas';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private SubscriberModel: SoftDeleteModel\n  ) { }\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { email, name, skills } = createSubscriberDto;\n\n    const existEmail = await this.SubscriberModel.findOne({ email });\n    if (existEmail) {\n      throw new BadRequestException('email already exists');\n    }\n\n    let newSubscriber = await this.SubscriberModel.create({ \n      email, name, skills,\n      createdBy: {\n        id: user._id,\n        email: user.email\n      }\n    });\n    return {\n      _id: newSubscriber._id,\n      email: newSubscriber.email\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.SubscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.SubscriberModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages,  //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result\n    }\n  }\n\n  findOne(id: string) {\n    if(!mongoose.Types.ObjectId.isValid(id)) {\n      return `not found subscribers`;\n    }\n    return this.SubscriberModel.findOne({id: id});\n  }\n\n  async getSkills(user: IUser) {\n    const {email} = user;\n    return await this.SubscriberModel.findOne({email}, {skills:1});\n  }\n\n  async update( updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    const updated = await this.SubscriberModel.updateOne({\n      email: user.email},{\n      ...updateSubscriberDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    },\n    { upsert: true}\n  );\n    return updated\n\n  }\n\n  async remove(id: string, user: IUser) {\n    if(!mongoose.Types.ObjectId.isValid(id)) {\n      return `not found subscribers`;\n    }\n    await this.SubscriberModel.updateOne({\n      id: id, \n      \n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return this.SubscriberModel.softDelete({\n      _id: id\n    })\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from '../decorators/customize';\n\nexport interface Response {\n    statusCode: number;\n    message?: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n    implements NestInterceptor> {\n        constructor(private reflector: Reflector) {\n        }\n    \n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        return next\n            .handle()\n            .pipe(\n                map((data) => ({\n                    statusCode: context.switchToHttp().getResponse().statusCode,\n                    message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                    data: data\n                })),\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n//dto: data transfer object\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'history không được để trống'})@IsArray({message: 'history có định dạng là array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n}\n\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history không được để trống', })\n    @IsArray({ message: 'history có định dạng là array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ['password'] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n    //bỏ qua password\n    @IsNotEmpty({ message: '_id không được để trống', })\n    _id: string\n}\n    \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy\n}\n\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty({ message: 'history không được để trống', })\n    @IsArray({ message: 'history có định dạng là array', })\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schemas';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n    @Prop()\n    name: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    password: string;\n\n    @Prop()\n    age: number;\n\n    @Prop()\n    gender: string;\n\n    @Prop()\n    address: string;\n\n    @Prop({ type: Object })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n    };\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    refreshToken: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    }\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch user with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a User')@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorators/customize';\nimport { IUser } from './users.interface';\n\n@Controller('users') // => /users\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new User\")\n  async create(@Body() CreateUserDto: CreateUserDto, @User() user: IUser) {\n    let newUser = await this.usersService.create(CreateUserDto, user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt\n    };\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch user with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() qs: string) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage(\"Fetch user by id\")\n  async findOne(@Param('id') id: string) {\n    const foundUser = await this.usersService.findOne(id);\n    return foundUser;\n  }\n\n  @ResponseMessage(\"Update a User\")\n  @Patch()\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    let updatedUser = await this.usersService.update(updateUserDto, user);\n    return updatedUser;\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a User\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schemas';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Role.name, schema: RoleSchema }\n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:189\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:182\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport { User } from 'src/decorators/customize';\nimport aqp from 'api-query-params';\nimport { NAME_USER } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schemas';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    @InjectModel(UserM.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel\n  ) { }\n\n\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  }\n\n  async create(createUserDto: CreateUserDto, @User() user: IUser) {\n    const {\n      name, email, password, age,\n      gender, address, role, company\n    }\n      = createUserDto;\n\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác.`)\n    }\n\n    const hashPassword = this.getHashPassword(password);\n\n    let newUser = await this.userModel.create({\n      name, email,\n      password: hashPassword,\n      age,\n      gender, address, role, company,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return newUser;\n  }\n\n  async register(user: RegisterUserDto) {\n    const { name, email, password, age, gender, address } = user;\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác.`)\n    }\n\n    //fetch user role\n    const userRole = await this.roleModel.findOne({ name: NAME_USER });\n\n    const hashPassword = this.getHashPassword(password);\n    let newRegister = await this.userModel.create({\n      name, email,\n      password: hashPassword,\n      age,\n      gender,\n      address,\n      role: userRole?._id\n    })\n    return newRegister;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * (+limit);\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n\n    const result = await this.userModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages,  //tổng số trang với điều kiện query\n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      return `not found user`;\n\n    return await this.userModel.findOne({\n      _id: id\n    })\n      .select(\"-password\")\n      .populate({ path: \"role\", select: { name: 1, _id: 1 } })\n\n\n    //exclude > {\n    return await this.userModel.updateOne(\n      { _id },\n      { refreshToken }\n    )\n  }\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel.findOne({ refreshToken })\n      .populate({\n        path: \"role\",\n        select: { name: 1 }\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passpost/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passpost/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            NAME_ADMIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            NAME_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            SkipChecPkermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            permissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            permissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schemas.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schemas.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schemas.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schemas.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schemas.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schemas.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.4.4\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.4.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/mongoose : ^10.0.10\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.4\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @types/bcryptjs : ^2.4.6\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : ^1.4.7\n        \n            cron : 2.4.3\n        \n            dotenv : 16.0.3\n        \n            ejs : ^3.1.10\n        \n            helmet : ^8.0.0\n        \n            mongoose : ^7.8.2\n        \n            ms : 2.1.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Hỏi Dân IT\nMọi thông tin về Tác giả Hỏi Dân IT, các bạn có thể tìm kiếm tại đây:\nWebsite chính thức: https://hoidanit.com.vn/\nYoutube “Hỏi Dân IT” : https://www.youtube.com/@hoidanit\nTiktok “Hỏi Dân IT” :  https://www.tiktok.com/@hoidanit\nFanpage “Hỏi Dân IT” : https://www.facebook.com/askITwithERIC/\nUdemy Hỏi Dân IT: https://www.udemy.com/user/eric-7039/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : be\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            permissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schemas.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schemas.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    permissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            NAME_ADMIN   (src/.../sample.ts)\n                        \n                        \n                            NAME_USER   (src/.../sample.ts)\n                        \n                        \n                            permissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schemas.ts)\n                        \n                        \n                            SkipChecPkermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schemas.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        \"_id\": \"648ab415f4328bd3153ee211\",\n        \"name\": \"Get Company with paginate\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:47:49.369Z\",\n        \"updatedAt\": \"2024-06-15T06:54:05.131Z\",\n        \"__v\": 0,\n        \"updatedBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        }\n    },\n    {\n        \"_id\": \"648ab436f4328bd3153ee216\",\n        \"name\": \"Create Company\",\n        \"apiPath\": \"/api/v1/companies\",\n        \"method\": \"POST\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:48:22.224Z\",\n        \"updatedAt\": \"2024-06-15T06:48:22.224Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4d5f4328bd3153ee21b\",\n        \"name\": \"Update Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:51:01.241Z\",\n        \"updatedAt\": \"2024-06-15T06:51:01.241Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab4ebf4328bd3153ee220\",\n        \"name\": \"Delete Company\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:51:23.973Z\",\n        \"updatedAt\": \"2024-06-15T06:51:23.973Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab5a8072f2a2ef910638d\",\n        \"name\": \"Get Company by id\",\n        \"apiPath\": \"/api/v1/companies/:id\",\n        \"method\": \"GET\",\n        \"module\": \"COMPANIES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:54:32.799Z\",\n        \"updatedAt\": \"2024-06-15T06:54:32.799Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6d3fa16b294212e4033\",\n        \"name\": \"Create User\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"POST\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:59:31.898Z\",\n        \"updatedAt\": \"2024-06-15T06:59:31.898Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6e7fa16b294212e4038\",\n        \"name\": \"Get User by Id\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T06:59:51.041Z\",\n        \"updatedAt\": \"2024-06-15T06:59:51.041Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab6fdfa16b294212e403d\",\n        \"name\": \"Get User with paginate\",\n        \"apiPath\": \"/api/v1/users\",\n        \"method\": \"GET\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T07:00:13.364Z\",\n        \"updatedAt\": \"2024-06-15T07:00:13.364Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab719fa16b294212e4042\",\n        \"name\": \"Update User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T07:00:41.934Z\",\n        \"updatedAt\": \"2024-06-15T07:00:41.934Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab728fa16b294212e4047\",\n        \"name\": \"Delete User\",\n        \"apiPath\": \"/api/v1/users/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"USERS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T07:00:56.274Z\",\n        \"updatedAt\": \"2024-06-15T07:00:56.274Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ab750fa16b294212e404c\",\n        \"name\": \"Upload Single File\",\n        \"apiPath\": \"/api/v1/files/upload\",\n        \"method\": \"POST\",\n        \"module\": \"FILES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T07:01:36.923Z\",\n        \"updatedAt\": \"2024-06-15T07:01:36.923Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad488dafdb9754f40b846\",\n        \"name\": \"Create a Job\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"POST\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:06:16.508Z\",\n        \"updatedAt\": \"2024-06-15T09:06:16.508Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad499dafdb9754f40b84b\",\n        \"name\": \"Get a job by id\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:06:33.697Z\",\n        \"updatedAt\": \"2024-06-15T09:06:33.697Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4a6dafdb9754f40b850\",\n        \"name\": \"Update a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:06:46.085Z\",\n        \"updatedAt\": \"2024-06-15T09:06:46.085Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4ccdafdb9754f40b859\",\n        \"name\": \"Get Job with paginate\",\n        \"apiPath\": \"/api/v1/jobs\",\n        \"method\": \"GET\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:07:24.175Z\",\n        \"updatedAt\": \"2024-06-15T09:07:24.175Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4d9dafdb9754f40b85e\",\n        \"name\": \"Delete a Job\",\n        \"apiPath\": \"/api/v1/jobs/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"JOBS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:07:37.896Z\",\n        \"updatedAt\": \"2024-06-15T09:07:37.896Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad4fedafdb9754f40b863\",\n        \"name\": \"Create a Resume\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:08:14.659Z\",\n        \"updatedAt\": \"2024-06-15T09:08:14.659Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad511dafdb9754f40b868\",\n        \"name\": \"Fetch resume with paginate\",\n        \"apiPath\": \"/api/v1/resumes\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:08:33.395Z\",\n        \"updatedAt\": \"2024-06-15T09:08:33.395Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad522dafdb9754f40b86d\",\n        \"name\": \"Get resume by id\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"GET\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:08:50.801Z\",\n        \"updatedAt\": \"2024-06-15T09:08:50.801Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad53bdafdb9754f40b872\",\n        \"name\": \"Delete a resume\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:09:15.785Z\",\n        \"updatedAt\": \"2024-06-15T09:09:15.785Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad555dafdb9754f40b877\",\n        \"name\": \"Update resume status\",\n        \"apiPath\": \"/api/v1/resumes/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:09:41.694Z\",\n        \"updatedAt\": \"2024-06-15T09:09:41.694Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad56ddafdb9754f40b87c\",\n        \"name\": \"get CV by user\",\n        \"apiPath\": \"/api/v1/resumes/by-user\",\n        \"method\": \"POST\",\n        \"module\": \"RESUMES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:10:05.961Z\",\n        \"updatedAt\": \"2024-06-15T09:10:05.961Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad59adafdb9754f40b881\",\n        \"name\": \"Create a permission\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"POST\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:10:50.946Z\",\n        \"updatedAt\": \"2024-06-15T09:10:50.946Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5aedafdb9754f40b886\",\n        \"name\": \"Fetch Permission with paginate\",\n        \"apiPath\": \"/api/v1/permissions\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:11:10.914Z\",\n        \"updatedAt\": \"2024-06-15T09:11:10.914Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5c5dafdb9754f40b88b\",\n        \"name\": \"Fetch permission by id\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"GET\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:11:33.234Z\",\n        \"updatedAt\": \"2024-06-15T09:11:33.234Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5d4dafdb9754f40b890\",\n        \"name\": \"Update a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:11:48.081Z\",\n        \"updatedAt\": \"2024-06-15T09:11:48.081Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad5ebdafdb9754f40b895\",\n        \"name\": \"Delete a permission\",\n        \"apiPath\": \"/api/v1/permissions/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"PERMISSIONS\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:12:11.323Z\",\n        \"updatedAt\": \"2024-06-15T09:12:11.323Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad613dafdb9754f40b89a\",\n        \"name\": \"Create Role\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"POST\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:12:51.974Z\",\n        \"updatedAt\": \"2024-06-15T09:12:51.974Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad622dafdb9754f40b89f\",\n        \"name\": \"Fetch roles with paginate\",\n        \"apiPath\": \"/api/v1/roles\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:13:06.618Z\",\n        \"updatedAt\": \"2024-06-15T09:13:06.618Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad630dafdb9754f40b8a6\",\n        \"name\": \"Fetch role by id\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"GET\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:13:20.853Z\",\n        \"updatedAt\": \"2024-06-15T09:13:20.853Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad640dafdb9754f40b8ab\",\n        \"name\": \"Update Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"PATCH\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:13:36.836Z\",\n        \"updatedAt\": \"2024-06-15T09:13:36.836Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"648ad650dafdb9754f40b8b0\",\n        \"name\": \"Delete a Role\",\n        \"apiPath\": \"/api/v1/roles/:id\",\n        \"method\": \"DELETE\",\n        \"module\": \"ROLES\",\n        \"createdBy\": {\n            \"_id\": \"672a4f9a36e40b68f890b37c\",\n            \"email\": \"admin@gmail.com\"\n        },\n        \"isDeleted\": false,\n        \"deletedAt\": null,\n        \"createdAt\": \"2024-06-15T09:13:52.798Z\",\n        \"updatedAt\": \"2024-06-15T09:13:52.798Z\",\n        \"__v\": 0\n    }\n\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NAME_ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NAME_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/decorators/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n    SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipChecPkermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (data: unknown, ctx: ExecutionContext) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user;\n    },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
